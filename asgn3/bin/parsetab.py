
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BLOCK_CLOSER BLOCK_COMMENT BLOCK_OPENER BOOLEAN BREAK BYTE CASE CATCH CHAR CHAR_CONSTANT CLASS COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVEQ DIVIDE DO DOT DOUBLE ELSE EQUALS EXTENDS FINAL FINALLY FLOAT FLOAT_CONSTANT FOR GEQ GRT IDENTIFIER IF IMPORT INCREMENT INLINE_COMMENT INSTANCEOF INT INT_CONSTANT LAMBDA LAMBDA_TOKEN LEQ LOGICAL_AND LOGICAL_NOT LOGICAL_OR LONG LSHIFTEQ LST L_PAREN L_SHIFT L_SQBR MINUS MINUSEQ MODEQ MODULO MULT MULTEQ NEW NOT_EQUAL NULL PACKAGE PLUS PLUSEQ QUESTION RETURN RSHIFTEQ R_PAREN R_SHIFT R_SQBR SHORT STATIC STMT_TERMINATOR STR_CONSTANT SUPER SWITCH THIS THROW THROWS TRY VOID WHILEGoal : CompilationUnit Literal : INT_CONSTANT\n    | FLOAT_CONSTANT\n    | CHAR_CONSTANT\n    | STR_CONSTANT\n    | NULL\n     Type : PrimitiveType\n    | ReferenceType\n     PrimitiveType : NumericType\n    | BOOLEAN\n     NumericType : IntegralType\n    | FloatingPointType\n     IntegralType : BYTE\n    | SHORT\n    | INT\n    | LONG\n    | CHAR\n     FloatingPointType : FLOAT\n    | DOUBLE\n     ReferenceType : ArrayType\n    | ClassType\n    \n    ClassType : Name\n     ArrayType : PrimitiveType L_SQBR R_SQBR\n    | Name L_SQBR R_SQBR\n    | ArrayType L_SQBR R_SQBR\n     Name : SimpleName\n    | QualifiedName SimpleName : IDENTIFIER QualifiedName : Name DOT IDENTIFIER\n    CompilationUnit : PackageDeclaration ImportDeclarations TypeDeclarations\n    | PackageDeclaration ImportDeclarations\n    | PackageDeclaration TypeDeclarations\n    | ImportDeclarations TypeDeclarations\n    | PackageDeclaration\n    | ImportDeclarations\n    | TypeDeclarations\n    |\n    \n    ImportDeclarations : ImportDeclaration\n    | ImportDeclarations ImportDeclaration\n    \n    TypeDeclarations : TypeDeclaration\n    | TypeDeclarations TypeDeclaration\n    \n    PackageDeclaration : PACKAGE Name STMT_TERMINATOR\n    \n    ImportDeclaration : SingleTypeImportDeclaration\n    | TypeImportOnDemandDeclaration\n    \n    SingleTypeImportDeclaration : IMPORT Name STMT_TERMINATOR\n    \n    TypeImportOnDemandDeclaration : IMPORT Name DOT MULT STMT_TERMINATOR\n    \n    TypeDeclaration : ClassDeclaration\n    | STMT_TERMINATOR\n    \n    Modifiers : Modifier\n    | Modifiers Modifier\n    \n    Modifier : STATIC\n    | FINAL\n    \n    ClassDeclaration : Modifiers CLASS IDENTIFIER Super ClassBody\n    | Modifiers CLASS IDENTIFIER ClassBody\n    | CLASS IDENTIFIER Super ClassBody\n    | CLASS IDENTIFIER ClassBody\n    \n    Super : EXTENDS ClassType\n    \n    ClassBody : BLOCK_OPENER BLOCK_CLOSER\n    | BLOCK_OPENER ClassBodyDeclarations BLOCK_CLOSER\n    \n    ClassBodyDeclarations : ClassBodyDeclaration\n    | ClassBodyDeclarations ClassBodyDeclaration\n    \n    ClassBodyDeclaration : ClassMemberDeclaration\n    | ConstructorDeclaration\n    | StaticInitializer\n    \n    ClassMemberDeclaration : FieldDeclaration\n    | MethodDeclaration\n    \n    FieldDeclaration : Modifiers Type VariableDeclarators STMT_TERMINATOR\n    | Type VariableDeclarators STMT_TERMINATOR\n    \n    VariableDeclarators : VariableDeclarator\n    | VariableDeclarators COMMA VariableDeclarator\n    \n    VariableDeclarator : VariableDeclaratorId\n    | VariableDeclaratorId ASSIGN VariableInitializer\n    \n    VariableDeclaratorId : IDENTIFIER\n    | VariableDeclaratorId L_SQBR R_SQBR\n    \n    VariableInitializer : Expression\n    | ArrayInitializer\n    \n    MethodDeclaration : MethodHeader MethodBody\n    \n    MethodHeader : Modifiers Type MethodDeclarator Throws\n    | Modifiers Type MethodDeclarator\n    | Type MethodDeclarator Throws\n    | Type MethodDeclarator\n    | Modifiers VOID MethodDeclarator Throws\n    | Modifiers VOID MethodDeclarator\n    | VOID MethodDeclarator Throws\n    | VOID MethodDeclarator\n    \n    MethodDeclarator : IDENTIFIER L_PAREN R_PAREN\n    | IDENTIFIER L_PAREN FormalParameterList R_PAREN\n    \n    FormalParameterList : FormalParameter\n    | FormalParameterList COMMA FormalParameter\n    \n    FormalParameter : Type VariableDeclaratorId\n    \n    Throws : THROWS ClassTypeList\n    \n    ClassTypeList : ClassType\n    | ClassTypeList COMMA ClassType\n    \n    MethodBody : Block\n    | STMT_TERMINATOR\n    \n    StaticInitializer : STATIC Block\n    \n    ConstructorDeclaration : Modifiers ConstructorDeclarator Throws ConstructorBody\n    | Modifiers ConstructorDeclarator ConstructorBody\n    | ConstructorDeclarator Throws ConstructorBody\n    | ConstructorDeclarator ConstructorBody\n    \n    ConstructorDeclarator : SimpleName L_PAREN FormalParameterList R_PAREN\n    | SimpleName L_PAREN R_PAREN\n    \n    ConstructorBody : BLOCK_OPENER ExplicitConstructorInvocation BlockStatements BLOCK_CLOSER\n    | BLOCK_OPENER ExplicitConstructorInvocation BLOCK_CLOSER\n    | BLOCK_OPENER BlockStatements BLOCK_CLOSER\n    | BLOCK_OPENER BLOCK_CLOSER\n    \n    ExplicitConstructorInvocation : THIS L_PAREN ArgumentList R_PAREN STMT_TERMINATOR\n    | THIS L_PAREN R_PAREN STMT_TERMINATOR\n    | SUPER L_PAREN ArgumentList R_PAREN STMT_TERMINATOR\n    | SUPER L_PAREN R_PAREN STMT_TERMINATOR\n    \n    ArrayInitializer : BLOCK_OPENER VariableInitializers BLOCK_CLOSER\n    | BLOCK_OPENER BLOCK_CLOSER\n    \n    VariableInitializers : VariableInitializer\n    | VariableInitializers COMMA VariableInitializer\n    \n    Block : BLOCK_OPENER BLOCK_CLOSER\n    | BLOCK_OPENER BlockStatements BLOCK_CLOSER\n    \n    BlockStatements : BlockStatement\n    | BlockStatements BlockStatement\n    \n    BlockStatement : LocalVariableDeclarationStatement\n    | Statement\n    \n    LocalVariableDeclarationStatement : LocalVariableDeclaration STMT_TERMINATOR\n    \n    LocalVariableDeclaration : Type VariableDeclarators\n    \n    Statement : StatementWithoutTrailingSubstatement\n    | LabeledStatement\n    | IfThenStatement\n    | IfThenElseStatement\n    | WhileStatement\n    | ForStatement\n    \n    StatementNoShortIf : StatementWithoutTrailingSubstatement\n    | LabeledStatementNoShortIf\n    | IfThenElseStatementNoShortIf\n    | WhileStatementNoShortIf\n    | ForStatementNoShortIf\n    \n    StatementWithoutTrailingSubstatement : Block\n    | EmptyStatement\n    | ExpressionStatement\n    | SwitchStatement\n    | DoStatement\n    | BreakStatement\n    | ContinueStatement\n    | ReturnStatement\n    | ThrowStatement\n    | TryStatement\n    \n    EmptyStatement : STMT_TERMINATOR\n    \n    LabeledStatement : IDENTIFIER COLON Statement\n    \n    LabeledStatementNoShortIf : IDENTIFIER COLON StatementNoShortIf\n    \n    ExpressionStatement : StatementExpression STMT_TERMINATOR\n    \n    StatementExpression : Assignment\n    | PreIncrementExpression\n    | PreDecrementExpression\n    | PostIncrementExpression\n    | PostDecrementExpression\n    | MethodInvocation\n    | ClassInstanceCreationExpression\n    \n    IfThenStatement : IF L_PAREN Expression R_PAREN Statement\n    \n    IfThenElseStatement : IF L_PAREN Expression R_PAREN StatementNoShortIf ELSE Statement\n    \n    IfThenElseStatementNoShortIf : IF L_PAREN Expression R_PAREN StatementNoShortIf ELSE StatementNoShortIf\n    \n    SwitchStatement : SWITCH L_PAREN Expression R_PAREN SwitchBlock\n    \n    SwitchBlock : BLOCK_OPENER BLOCK_CLOSER\n    | BLOCK_OPENER SwitchBlockStatementGroups SwitchLabels BLOCK_CLOSER\n    | BLOCK_OPENER SwitchBlockStatementGroups BLOCK_CLOSER\n    | BLOCK_OPENER SwitchLabels BLOCK_CLOSER\n    \n    SwitchBlockStatementGroups : SwitchBlockStatementGroup\n    | SwitchBlockStatementGroups SwitchBlockStatementGroup\n    \n    SwitchBlockStatementGroup : SwitchLabels BlockStatements\n    \n    SwitchLabels : SwitchLabel\n    | SwitchLabels SwitchLabel\n    \n    SwitchLabel : CASE ConstantExpression COLON\n    | DEFAULT COLON\n    \n    WhileStatement : WHILE L_PAREN Expression R_PAREN Statement\n    \n    WhileStatementNoShortIf : WHILE L_PAREN Expression R_PAREN StatementNoShortIf\n    \n    DoStatement : DO Statement WHILE L_PAREN Expression R_PAREN STMT_TERMINATOR\n    \n    ForStatement : FOR L_PAREN ForInit STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_PAREN Statement\n    | FOR L_PAREN STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_PAREN Statement\n    | FOR L_PAREN ForInit STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_PAREN Statement\n    | FOR L_PAREN ForInit STMT_TERMINATOR Expression STMT_TERMINATOR R_PAREN Statement\n    | FOR L_PAREN ForInit STMT_TERMINATOR STMT_TERMINATOR R_PAREN Statement\n    | FOR L_PAREN STMT_TERMINATOR Expression STMT_TERMINATOR R_PAREN Statement\n    | FOR L_PAREN STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_PAREN Statement\n    | FOR L_PAREN STMT_TERMINATOR STMT_TERMINATOR R_PAREN Statement\n    \n    ForStatementNoShortIf : FOR L_PAREN ForInit STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_PAREN StatementNoShortIf\n    | FOR L_PAREN STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_PAREN StatementNoShortIf\n    | FOR L_PAREN ForInit STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_PAREN StatementNoShortIf\n    | FOR L_PAREN ForInit STMT_TERMINATOR Expression STMT_TERMINATOR R_PAREN StatementNoShortIf\n    | FOR L_PAREN ForInit STMT_TERMINATOR STMT_TERMINATOR R_PAREN StatementNoShortIf\n    | FOR L_PAREN STMT_TERMINATOR Expression STMT_TERMINATOR R_PAREN StatementNoShortIf\n    | FOR L_PAREN STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_PAREN StatementNoShortIf\n    | FOR L_PAREN STMT_TERMINATOR STMT_TERMINATOR R_PAREN StatementNoShortIf\n    \n    ForInit : StatementExpressionList\n    | LocalVariableDeclaration\n    \n    ForUpdate : StatementExpressionList\n    \n    StatementExpressionList : StatementExpression\n    | StatementExpressionList COMMA StatementExpression\n    \n    BreakStatement : BREAK IDENTIFIER STMT_TERMINATOR\n    | BREAK STMT_TERMINATOR\n    \n    ContinueStatement : CONTINUE IDENTIFIER STMT_TERMINATOR\n    | CONTINUE STMT_TERMINATOR\n    \n    ReturnStatement : RETURN Expression STMT_TERMINATOR\n    | RETURN STMT_TERMINATOR\n    \n    ThrowStatement : THROW Expression STMT_TERMINATOR\n    \n    TryStatement : TRY Block Catches\n    | TRY Block Catches Finally\n    | TRY Block Finally\n    \n    Catches : CatchClause\n    | Catches CatchClause\n    \n    CatchClause : CATCH L_PAREN FormalParameter R_PAREN Block\n    \n    Finally : FINALLY Block\n    \n    Primary : PrimaryNoNewArray\n    | ArrayCreationExpression\n    \n    PrimaryNoNewArray : Literal\n    | THIS\n    | L_PAREN Expression R_PAREN\n    | ClassInstanceCreationExpression\n    | FieldAccess\n    | MethodInvocation\n    | ArrayAccess\n    \n    ClassInstanceCreationExpression : NEW ClassType L_PAREN R_PAREN\n    | NEW ClassType L_PAREN ArgumentList R_PAREN\n    \n    ArgumentList : Expression\n    | ArgumentList COMMA Expression\n    \n    ArrayCreationExpression : NEW PrimitiveType DimExprs Dims\n    | NEW PrimitiveType DimExprs\n    | NEW ClassType DimExprs Dims\n    | NEW ClassType DimExprs\n    \n    DimExprs : DimExpr\n    | DimExprs DimExpr\n    \n    DimExpr : L_SQBR Expression R_SQBR\n    \n    Dims : L_SQBR R_SQBR\n    | Dims L_SQBR R_SQBR\n    \n    FieldAccess : Primary DOT IDENTIFIER\n    | SUPER DOT IDENTIFIER\n    \n    MethodInvocation : Name L_PAREN ArgumentList R_PAREN\n    | Name L_PAREN R_PAREN\n    | Primary DOT IDENTIFIER L_PAREN ArgumentList R_PAREN\n    | Primary DOT IDENTIFIER L_PAREN R_PAREN\n    | SUPER DOT IDENTIFIER L_PAREN ArgumentList R_PAREN\n    | SUPER DOT IDENTIFIER L_PAREN R_PAREN\n    \n    ArrayAccess : Name L_SQBR Expression R_SQBR\n    | PrimaryNoNewArray L_SQBR Expression R_SQBR\n    \n    PostfixExpression : Primary\n    | Name\n    | PostIncrementExpression\n    | PostDecrementExpression\n    \n    PostIncrementExpression : PostfixExpression INCREMENT\n    \n    PostDecrementExpression : PostfixExpression DECREMENT\n    \n    UnaryExpression : PreIncrementExpression\n    | PreDecrementExpression\n    | PLUS UnaryExpression\n    | MINUS UnaryExpression\n    | UnaryExpressionNotPlusMinus\n    \n    PreIncrementExpression : INCREMENT UnaryExpression\n    \n    PreDecrementExpression : DECREMENT UnaryExpression\n    \n    UnaryExpressionNotPlusMinus : PostfixExpression\n    | BITWISE_NOT UnaryExpression\n    | LOGICAL_NOT UnaryExpression\n    | CastExpression\n    \n    CastExpression : L_PAREN PrimitiveType Dims R_PAREN UnaryExpression\n    | L_PAREN PrimitiveType R_PAREN UnaryExpression\n    | L_PAREN Expression R_PAREN UnaryExpressionNotPlusMinus\n    | L_PAREN Name Dims R_PAREN UnaryExpressionNotPlusMinus\n    \n    MultiplicativeExpression : UnaryExpression\n    | MultiplicativeExpression MULT UnaryExpression\n    | MultiplicativeExpression DIVIDE UnaryExpression\n    | MultiplicativeExpression MODULO UnaryExpression\n    \n    AdditiveExpression : MultiplicativeExpression\n    | AdditiveExpression PLUS MultiplicativeExpression\n    | AdditiveExpression MINUS MultiplicativeExpression\n    \n    ShiftExpression : AdditiveExpression\n    | ShiftExpression L_SHIFT AdditiveExpression\n    | ShiftExpression R_SHIFT AdditiveExpression\n    \n    RelationalExpression : ShiftExpression\n    | RelationalExpression LST ShiftExpression\n    | RelationalExpression GRT ShiftExpression\n    | RelationalExpression LEQ ShiftExpression\n    | RelationalExpression GEQ ShiftExpression\n    | RelationalExpression INSTANCEOF ReferenceType\n    \n    EqualityExpression : RelationalExpression\n    | EqualityExpression EQUALS RelationalExpression\n    | EqualityExpression NOT_EQUAL RelationalExpression\n    \n    AndExpression : EqualityExpression\n    | AndExpression BITWISE_AND EqualityExpression\n    \n    ExclusiveOrExpression : AndExpression\n    | ExclusiveOrExpression BITWISE_XOR AndExpression\n    \n    InclusiveOrExpression : ExclusiveOrExpression\n    | InclusiveOrExpression BITWISE_OR ExclusiveOrExpression\n    \n    ConditionalAndExpression : InclusiveOrExpression\n    | ConditionalAndExpression LOGICAL_AND InclusiveOrExpression\n    \n    ConditionalOrExpression : ConditionalAndExpression\n    | ConditionalOrExpression LOGICAL_OR ConditionalAndExpression\n    \n    ConditionalExpression : ConditionalOrExpression\n    | ConditionalOrExpression QUESTION Expression COLON ConditionalExpression\n    \n    AssignmentExpression : ConditionalExpression\n    | Assignment\n    | LambdaExpression\n    \n    Assignment : LeftHandSide AssignmentOperator AssignmentExpression\n    \n    LeftHandSide : Name\n    | FieldAccess\n    | ArrayAccess\n    \n    AssignmentOperator : ASSIGN\n    | MULTEQ\n    | DIVEQ\n    | MODEQ\n    | PLUSEQ\n    | MINUSEQ\n    | LSHIFTEQ\n    | RSHIFTEQ\n    \n    Expression : AssignmentExpression\n    \n    LambdaExpression : LAMBDA L_PAREN FormalParameterList R_PAREN LAMBDA_TOKEN Block\n    | LAMBDA L_PAREN R_PAREN LAMBDA_TOKEN Block\n    \n    ConstantExpression : Expression\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,7,8,9,10,11,12,19,20,21,22,23,32,33,35,39,45,46,49,80,81,82,],[-37,0,-1,-34,-35,-36,-48,-38,-40,-43,-44,-47,-31,-32,-33,-39,-41,-30,-42,-45,-56,-54,-55,-58,-46,-53,-59,]),'PACKAGE':([0,],[6,]),'STMT_TERMINATOR':([0,3,4,5,7,8,9,10,11,12,19,20,21,22,23,24,25,26,27,28,32,33,35,39,42,43,45,46,48,49,61,68,69,72,80,81,82,90,92,93,94,95,96,97,103,109,110,111,113,114,115,116,120,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,147,149,150,151,152,155,156,157,158,159,160,161,169,170,171,172,173,174,175,176,177,178,179,180,182,185,193,194,195,196,199,200,202,205,209,210,211,212,213,215,216,217,218,220,221,222,223,224,226,227,228,229,230,233,234,235,236,237,240,241,242,245,246,247,248,251,252,256,257,258,259,260,261,262,275,276,277,279,280,281,282,283,288,289,290,292,293,294,296,300,303,334,335,336,337,339,341,344,345,346,347,348,352,353,354,355,356,357,358,363,364,368,369,371,373,375,378,380,381,388,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,412,413,415,416,417,419,423,424,425,427,428,429,431,433,434,437,438,439,441,443,446,447,452,454,456,458,466,468,470,473,474,479,480,481,483,484,485,486,488,489,491,492,494,496,498,499,501,502,504,506,509,511,512,514,517,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,541,542,543,544,545,546,547,551,553,555,556,558,560,563,565,568,570,573,],[7,7,7,7,-48,-38,-40,-43,-44,-47,7,7,7,-39,-41,33,-26,-27,-28,35,7,-42,-45,-56,-29,80,-54,-55,-22,-58,100,-20,-21,-22,-46,-53,-59,120,120,183,-81,-69,-73,-71,-85,198,-79,-83,-91,-92,120,120,-144,-117,-119,-120,245,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,252,120,257,259,261,-148,-149,-150,-151,-152,-153,-154,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-115,120,-211,-80,-23,-84,-25,-24,-78,-82,120,-118,-307,-292,-293,-294,-290,-288,-241,-286,-240,-208,-284,-213,-215,-282,-280,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-121,-122,-73,120,345,-147,352,-195,353,-197,354,-199,355,-251,-240,-241,-214,-216,-252,-244,-245,-116,-70,-86,-72,-75,-76,-74,-93,380,-248,-249,-254,-255,413,-145,417,418,-189,-190,-192,-194,-196,-198,-200,-201,-203,-204,-233,-295,-224,-225,-222,-87,-112,441,-108,-212,-289,-287,-285,-230,-231,-283,-281,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,452,-110,120,120,467,472,-202,-205,-207,-238,-232,-212,-217,-223,-226,-221,-239,-111,-107,-259,-258,-228,-109,-237,-155,-123,-170,497,120,-193,-158,-235,-218,-227,-257,-229,-260,-291,-309,-236,120,120,518,120,120,-180,120,-159,120,-166,535,-234,-308,-156,539,540,120,-177,120,-179,120,-178,120,-161,-162,-167,120,-169,-172,-206,120,120,550,554,-175,120,-176,-174,-160,-168,559,120,-173,120,120,120,120,120,120,120,120,]),'IMPORT':([0,3,4,8,10,11,19,22,33,35,80,],[13,13,13,-38,-43,-44,13,-39,-42,-45,-46,]),'CLASS':([0,3,4,5,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,30,32,33,35,39,45,46,49,80,81,82,],[15,15,15,15,-48,-38,-40,-43,-44,-47,29,-49,-51,-52,15,15,15,-39,-41,-50,15,-42,-45,-56,-54,-55,-58,-46,-53,-59,]),'STATIC':([0,3,4,5,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,30,32,33,35,39,41,45,46,49,50,51,52,53,54,55,56,57,59,80,81,82,83,88,91,98,99,100,108,112,117,179,183,197,198,203,204,288,301,],[17,17,17,17,-48,-38,-40,-43,-44,-47,17,-49,-51,-52,17,17,17,-39,-41,-50,17,-42,-45,-56,59,-54,-55,-58,59,-60,-62,-63,-64,-65,-66,17,-51,-46,-53,-59,-61,-100,-96,-77,-94,-95,-98,-99,-106,-115,-68,-97,-67,-104,-105,-116,-103,]),'FINAL':([0,3,4,5,7,8,9,10,11,12,14,16,17,18,19,20,21,22,23,30,32,33,35,39,41,45,46,49,50,51,52,53,54,55,56,57,59,80,81,82,83,88,91,98,99,100,108,112,117,179,183,197,198,203,204,288,301,],[18,18,18,18,-48,-38,-40,-43,-44,-47,18,-49,-51,-52,18,18,18,-39,-41,-50,18,-42,-45,-56,18,-54,-55,-58,18,-60,-62,-63,-64,-65,-66,18,-51,-46,-53,-59,-61,-100,-96,-77,-94,-95,-98,-99,-106,-115,-68,-97,-67,-104,-105,-116,-103,]),'IDENTIFIER':([6,13,15,16,17,18,25,26,27,29,30,34,36,40,41,42,50,51,52,53,54,55,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,83,85,86,88,89,90,91,92,98,99,100,101,108,112,115,116,117,119,120,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,149,150,151,152,153,162,164,165,168,179,180,183,184,186,187,192,193,195,196,197,198,201,202,203,204,205,206,207,225,231,232,238,239,243,244,245,248,249,250,251,252,253,257,259,261,264,265,266,267,268,269,270,271,272,273,274,278,284,287,288,295,298,301,309,310,311,312,313,314,315,316,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,341,345,349,352,353,354,355,356,357,358,367,370,379,380,381,383,386,413,414,415,416,417,418,420,422,423,424,425,426,429,430,435,440,441,444,448,449,452,456,458,466,467,470,472,474,490,491,492,493,494,496,497,498,499,501,502,504,506,507,514,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,540,542,543,544,545,546,547,550,553,554,555,556,558,559,560,563,565,568,570,573,],[27,27,31,-49,-51,-52,-26,-27,-28,37,-50,42,42,27,27,-29,27,-60,-62,-63,-64,-65,-66,27,-51,96,-26,-7,-8,104,-9,-10,-20,-21,-11,-12,-22,-13,-14,-15,-16,-17,-18,-19,-61,96,104,-100,27,143,-96,143,-77,-94,-95,27,-98,-99,143,143,-106,27,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,247,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-28,143,256,258,27,27,-22,27,27,27,-115,143,-68,247,27,27,247,-23,-25,-24,-97,-67,27,143,-104,-105,-118,27,27,27,27,27,27,27,27,340,-121,143,27,27,27,-147,27,-195,-197,-199,27,27,27,-299,-300,-301,-302,-303,-304,-305,-306,27,366,27,-116,27,27,-103,27,27,27,27,27,27,393,394,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-145,27,-22,-194,-196,-198,-200,-201,-203,-204,27,27,27,-108,27,27,27,-110,27,463,143,27,27,27,27,-202,-205,-207,27,27,27,27,27,-107,27,27,27,-109,-155,-123,-170,27,143,27,-158,27,143,463,27,27,143,27,143,-180,143,-159,143,-166,27,-156,27,143,-177,143,-179,143,-178,143,-161,-162,-167,143,-169,-172,-206,463,463,27,27,-175,143,-176,-174,-160,-168,27,463,27,-173,463,463,27,463,463,463,463,463,463,]),'VOID':([16,17,18,30,41,50,51,52,53,54,55,56,57,59,83,88,91,98,99,100,108,112,117,179,183,197,198,203,204,288,301,],[-49,-51,-52,-50,65,65,-60,-62,-63,-64,-65,-66,86,-51,-61,-100,-96,-77,-94,-95,-98,-99,-106,-115,-68,-97,-67,-104,-105,-116,-103,]),'BOOLEAN':([16,17,18,30,41,50,51,52,53,54,55,56,57,59,83,88,90,91,92,98,99,100,101,108,112,115,116,117,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,168,179,180,183,186,197,198,202,203,204,205,207,225,245,251,252,257,259,261,278,288,298,301,311,326,341,352,353,354,355,356,357,358,380,413,423,424,425,426,441,452,456,458,466,474,494,499,502,504,506,514,520,523,525,526,527,529,530,531,534,535,536,542,544,545,546,547,555,],[-49,-51,-52,-50,67,67,-60,-62,-63,-64,-65,-66,67,-51,-61,-100,67,-96,67,-77,-94,-95,67,-98,-99,67,67,-106,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,67,-115,67,-68,67,-97,-67,67,-104,-105,-118,67,67,-121,67,-147,-195,-197,-199,67,-116,67,-103,67,67,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,-202,-205,-207,67,-107,-109,-155,-123,-170,-158,67,-180,-159,67,-166,-156,-177,-179,-178,67,-161,-162,-167,67,-169,-172,-206,-175,-176,-174,-160,-168,-173,]),'BYTE':([16,17,18,30,41,50,51,52,53,54,55,56,57,59,83,88,90,91,92,98,99,100,101,108,112,115,116,117,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,168,179,180,183,186,197,198,202,203,204,205,207,225,245,251,252,257,259,261,278,288,298,301,311,326,341,352,353,354,355,356,357,358,380,413,423,424,425,426,441,452,456,458,466,474,494,499,502,504,506,514,520,523,525,526,527,529,530,531,534,535,536,542,544,545,546,547,555,],[-49,-51,-52,-50,73,73,-60,-62,-63,-64,-65,-66,73,-51,-61,-100,73,-96,73,-77,-94,-95,73,-98,-99,73,73,-106,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,73,-115,73,-68,73,-97,-67,73,-104,-105,-118,73,73,-121,73,-147,-195,-197,-199,73,-116,73,-103,73,73,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,-202,-205,-207,73,-107,-109,-155,-123,-170,-158,73,-180,-159,73,-166,-156,-177,-179,-178,73,-161,-162,-167,73,-169,-172,-206,-175,-176,-174,-160,-168,-173,]),'SHORT':([16,17,18,30,41,50,51,52,53,54,55,56,57,59,83,88,90,91,92,98,99,100,101,108,112,115,116,117,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,168,179,180,183,186,197,198,202,203,204,205,207,225,245,251,252,257,259,261,278,288,298,301,311,326,341,352,353,354,355,356,357,358,380,413,423,424,425,426,441,452,456,458,466,474,494,499,502,504,506,514,520,523,525,526,527,529,530,531,534,535,536,542,544,545,546,547,555,],[-49,-51,-52,-50,74,74,-60,-62,-63,-64,-65,-66,74,-51,-61,-100,74,-96,74,-77,-94,-95,74,-98,-99,74,74,-106,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,74,-115,74,-68,74,-97,-67,74,-104,-105,-118,74,74,-121,74,-147,-195,-197,-199,74,-116,74,-103,74,74,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,-202,-205,-207,74,-107,-109,-155,-123,-170,-158,74,-180,-159,74,-166,-156,-177,-179,-178,74,-161,-162,-167,74,-169,-172,-206,-175,-176,-174,-160,-168,-173,]),'INT':([16,17,18,30,41,50,51,52,53,54,55,56,57,59,83,88,90,91,92,98,99,100,101,108,112,115,116,117,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,168,179,180,183,186,197,198,202,203,204,205,207,225,245,251,252,257,259,261,278,288,298,301,311,326,341,352,353,354,355,356,357,358,380,413,423,424,425,426,441,452,456,458,466,474,494,499,502,504,506,514,520,523,525,526,527,529,530,531,534,535,536,542,544,545,546,547,555,],[-49,-51,-52,-50,75,75,-60,-62,-63,-64,-65,-66,75,-51,-61,-100,75,-96,75,-77,-94,-95,75,-98,-99,75,75,-106,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,75,-115,75,-68,75,-97,-67,75,-104,-105,-118,75,75,-121,75,-147,-195,-197,-199,75,-116,75,-103,75,75,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,-202,-205,-207,75,-107,-109,-155,-123,-170,-158,75,-180,-159,75,-166,-156,-177,-179,-178,75,-161,-162,-167,75,-169,-172,-206,-175,-176,-174,-160,-168,-173,]),'LONG':([16,17,18,30,41,50,51,52,53,54,55,56,57,59,83,88,90,91,92,98,99,100,101,108,112,115,116,117,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,168,179,180,183,186,197,198,202,203,204,205,207,225,245,251,252,257,259,261,278,288,298,301,311,326,341,352,353,354,355,356,357,358,380,413,423,424,425,426,441,452,456,458,466,474,494,499,502,504,506,514,520,523,525,526,527,529,530,531,534,535,536,542,544,545,546,547,555,],[-49,-51,-52,-50,76,76,-60,-62,-63,-64,-65,-66,76,-51,-61,-100,76,-96,76,-77,-94,-95,76,-98,-99,76,76,-106,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,76,-115,76,-68,76,-97,-67,76,-104,-105,-118,76,76,-121,76,-147,-195,-197,-199,76,-116,76,-103,76,76,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,-202,-205,-207,76,-107,-109,-155,-123,-170,-158,76,-180,-159,76,-166,-156,-177,-179,-178,76,-161,-162,-167,76,-169,-172,-206,-175,-176,-174,-160,-168,-173,]),'CHAR':([16,17,18,30,41,50,51,52,53,54,55,56,57,59,83,88,90,91,92,98,99,100,101,108,112,115,116,117,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,168,179,180,183,186,197,198,202,203,204,205,207,225,245,251,252,257,259,261,278,288,298,301,311,326,341,352,353,354,355,356,357,358,380,413,423,424,425,426,441,452,456,458,466,474,494,499,502,504,506,514,520,523,525,526,527,529,530,531,534,535,536,542,544,545,546,547,555,],[-49,-51,-52,-50,77,77,-60,-62,-63,-64,-65,-66,77,-51,-61,-100,77,-96,77,-77,-94,-95,77,-98,-99,77,77,-106,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,77,-115,77,-68,77,-97,-67,77,-104,-105,-118,77,77,-121,77,-147,-195,-197,-199,77,-116,77,-103,77,77,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,-202,-205,-207,77,-107,-109,-155,-123,-170,-158,77,-180,-159,77,-166,-156,-177,-179,-178,77,-161,-162,-167,77,-169,-172,-206,-175,-176,-174,-160,-168,-173,]),'FLOAT':([16,17,18,30,41,50,51,52,53,54,55,56,57,59,83,88,90,91,92,98,99,100,101,108,112,115,116,117,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,168,179,180,183,186,197,198,202,203,204,205,207,225,245,251,252,257,259,261,278,288,298,301,311,326,341,352,353,354,355,356,357,358,380,413,423,424,425,426,441,452,456,458,466,474,494,499,502,504,506,514,520,523,525,526,527,529,530,531,534,535,536,542,544,545,546,547,555,],[-49,-51,-52,-50,78,78,-60,-62,-63,-64,-65,-66,78,-51,-61,-100,78,-96,78,-77,-94,-95,78,-98,-99,78,78,-106,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,78,-115,78,-68,78,-97,-67,78,-104,-105,-118,78,78,-121,78,-147,-195,-197,-199,78,-116,78,-103,78,78,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,-202,-205,-207,78,-107,-109,-155,-123,-170,-158,78,-180,-159,78,-166,-156,-177,-179,-178,78,-161,-162,-167,78,-169,-172,-206,-175,-176,-174,-160,-168,-173,]),'DOUBLE':([16,17,18,30,41,50,51,52,53,54,55,56,57,59,83,88,90,91,92,98,99,100,101,108,112,115,116,117,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,168,179,180,183,186,197,198,202,203,204,205,207,225,245,251,252,257,259,261,278,288,298,301,311,326,341,352,353,354,355,356,357,358,380,413,423,424,425,426,441,452,456,458,466,474,494,499,502,504,506,514,520,523,525,526,527,529,530,531,534,535,536,542,544,545,546,547,555,],[-49,-51,-52,-50,79,79,-60,-62,-63,-64,-65,-66,79,-51,-61,-100,79,-96,79,-77,-94,-95,79,-98,-99,79,79,-106,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,79,-115,79,-68,79,-97,-67,79,-104,-105,-118,79,79,-121,79,-147,-195,-197,-199,79,-116,79,-103,79,79,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,-202,-205,-207,79,-107,-109,-155,-123,-170,-158,79,-180,-159,79,-166,-156,-177,-179,-178,79,-161,-162,-167,79,-169,-172,-206,-175,-176,-174,-160,-168,-173,]),'DOT':([24,25,26,27,28,42,48,62,72,118,121,143,160,161,162,167,169,170,171,172,173,174,175,176,177,178,181,182,216,218,219,220,222,223,255,276,277,279,280,307,308,340,349,363,366,368,369,371,381,393,394,427,428,429,431,433,434,437,438,447,454,463,479,480,481,484,489,511,],[34,-26,-27,-28,36,-29,34,-26,34,-211,244,-28,-215,-213,34,284,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,244,-211,34,315,316,-208,-213,-215,34,315,34,-214,-216,34,-212,-231,34,-233,-230,-224,-225,-222,-212,-230,-231,-238,-232,-212,-217,-223,-226,-221,-239,-228,-237,-28,-235,-218,-227,-229,-236,-234,]),'BLOCK_OPENER':([25,26,27,31,37,38,42,44,47,48,58,59,61,84,87,90,92,94,103,107,110,111,113,114,115,116,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,154,179,180,185,187,190,194,199,200,202,205,245,248,252,257,259,261,288,290,295,297,300,341,352,353,354,355,356,357,358,359,373,380,413,415,416,421,423,424,425,440,441,451,452,456,458,466,470,474,487,491,492,496,498,499,501,502,504,506,510,514,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,542,543,544,545,546,547,553,555,556,558,560,563,565,568,570,573,],[-26,-27,-28,41,41,41,-29,41,-57,-22,90,92,92,90,90,92,92,-81,-85,90,-79,-83,-91,-92,92,92,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,92,92,-115,92,-80,295,-102,-84,-78,-82,92,-118,-121,92,-147,-195,-197,-199,-116,-86,295,-101,-93,-145,-194,-196,-198,-200,-201,-203,-204,92,-87,-108,-110,92,92,475,-202,-205,-207,295,-107,92,-109,-155,-123,-170,92,-158,92,92,92,92,92,-180,92,-159,92,-166,92,-156,92,-177,92,-179,92,-178,92,-161,-162,-167,92,-169,-172,-206,92,92,-175,92,-176,-174,-160,-168,92,-173,92,92,92,92,92,92,92,92,]),'COMMA':([25,26,27,42,48,68,69,72,93,95,96,97,109,113,114,155,156,157,158,159,160,161,169,170,171,172,173,174,175,176,177,178,179,182,189,191,193,195,196,209,210,211,212,213,215,216,217,218,220,221,222,223,224,226,227,228,229,230,233,234,235,236,237,240,241,242,246,247,275,276,277,279,280,281,282,283,288,289,291,292,293,294,296,299,300,302,304,334,335,336,337,338,346,348,362,363,364,368,369,371,374,375,376,377,381,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,432,433,434,437,438,439,442,443,446,447,453,454,471,473,478,479,480,481,482,483,484,485,486,488,489,511,512,],[-26,-27,-28,-29,-22,-20,-21,-22,184,-69,-73,-71,184,201,-92,-148,-149,-150,-151,-152,-153,-154,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-115,-211,298,-88,-23,-25,-24,-307,-292,-293,-294,-290,-288,-241,-286,-240,-208,-284,-213,-215,-282,-280,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,184,-73,-251,-240,-241,-214,-216,-252,-244,-245,-116,-70,298,-72,-75,-76,-74,-90,-93,379,-219,-248,-249,-254,-255,379,420,-192,379,-233,-295,-224,-225,-222,440,-112,-113,-89,-212,-289,298,-287,-285,-230,-231,-283,-281,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,379,-223,-226,-221,-239,-111,-220,-259,-258,-228,379,-237,420,-193,379,-235,-218,-227,-114,-257,-229,-260,-291,-309,-236,-234,-308,]),'L_SQBR':([25,26,27,42,48,62,63,66,67,68,70,71,72,73,74,75,76,77,78,79,96,97,118,143,160,161,162,169,170,171,173,174,175,176,177,178,182,193,195,196,216,220,222,223,247,255,277,279,280,285,286,296,299,306,307,308,319,340,349,363,366,368,369,371,381,382,385,393,394,404,427,428,429,431,433,434,437,438,447,454,463,479,480,481,484,489,511,],[-26,-27,-28,-29,-22,-26,102,-9,-10,105,-11,-12,106,-13,-14,-15,-16,-17,-18,-19,-73,188,-211,-28,-215,-213,264,-214,-216,287,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,313,287,-213,-215,-73,313,313,-214,-216,370,370,-74,188,384,386,-212,370,-231,264,-233,-230,435,-225,435,-212,445,445,-230,-231,102,-238,-232,-212,-217,445,-226,445,-239,-228,-237,-28,-235,-218,-227,-229,-236,-234,]),'L_PAREN':([25,26,27,42,48,62,90,92,96,104,115,116,118,119,120,121,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,152,153,162,164,165,179,180,187,202,205,206,207,214,216,231,232,238,239,243,245,248,249,250,251,252,253,255,257,259,261,264,265,266,267,268,269,270,271,272,273,274,277,278,285,287,288,295,307,309,310,312,313,314,317,318,319,320,321,322,323,324,325,327,328,329,330,331,332,333,340,341,345,349,351,352,353,354,355,356,357,358,360,366,367,370,379,380,381,383,386,393,394,413,414,415,416,417,418,420,422,423,424,425,429,430,435,440,441,444,448,449,452,455,456,458,463,464,465,466,467,470,472,474,490,491,492,493,494,496,497,498,499,501,502,504,506,507,514,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,540,542,543,544,545,546,547,550,553,554,555,556,558,559,560,563,565,568,570,573,],[-26,-27,-28,-29,-22,101,119,119,186,186,119,119,206,207,-144,243,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-28,249,250,251,253,119,207,207,265,278,278,-115,119,207,119,-118,207,207,311,265,278,278,278,278,207,-121,119,207,207,119,-147,207,265,-195,-197,-199,207,207,207,-299,-300,-301,-302,-303,-304,-305,-306,265,207,367,207,-116,207,265,207,278,278,207,278,278,278,367,278,278,278,278,278,278,278,278,278,278,278,278,278,414,-145,207,265,422,-194,-196,-198,-200,-201,-203,-204,426,430,207,207,207,-108,278,278,207,430,414,-110,207,119,119,207,119,119,207,-202,-205,-207,278,207,207,207,-107,278,278,278,-109,490,-155,-123,-28,493,494,-170,119,119,119,-158,207,119,119,207,119,119,119,119,-180,119,-159,119,-166,207,-156,207,119,-177,119,-179,119,-178,119,-161,-162,-167,119,-169,-172,-206,119,119,207,119,-175,119,-176,-174,-160,-168,119,119,119,-173,119,119,119,119,119,119,119,119,119,]),'ASSIGN':([25,26,27,42,96,97,143,162,163,169,170,216,247,255,296,307,340,349,366,393,394,427,438,463,],[-26,-27,-28,-29,-73,187,-28,-296,267,-297,-298,-296,-73,-296,-74,-296,-231,-296,-230,-230,-231,-238,-239,-28,]),'MULTEQ':([25,26,27,42,143,162,163,169,170,216,255,307,340,349,366,393,394,427,438,463,],[-26,-27,-28,-29,-28,-296,268,-297,-298,-296,-296,-296,-231,-296,-230,-230,-231,-238,-239,-28,]),'DIVEQ':([25,26,27,42,143,162,163,169,170,216,255,307,340,349,366,393,394,427,438,463,],[-26,-27,-28,-29,-28,-296,269,-297,-298,-296,-296,-296,-231,-296,-230,-230,-231,-238,-239,-28,]),'MODEQ':([25,26,27,42,143,162,163,169,170,216,255,307,340,349,366,393,394,427,438,463,],[-26,-27,-28,-29,-28,-296,270,-297,-298,-296,-296,-296,-231,-296,-230,-230,-231,-238,-239,-28,]),'PLUSEQ':([25,26,27,42,143,162,163,169,170,216,255,307,340,349,366,393,394,427,438,463,],[-26,-27,-28,-29,-28,-296,271,-297,-298,-296,-296,-296,-231,-296,-230,-230,-231,-238,-239,-28,]),'MINUSEQ':([25,26,27,42,143,162,163,169,170,216,255,307,340,349,366,393,394,427,438,463,],[-26,-27,-28,-29,-28,-296,272,-297,-298,-296,-296,-296,-231,-296,-230,-230,-231,-238,-239,-28,]),'LSHIFTEQ':([25,26,27,42,143,162,163,169,170,216,255,307,340,349,366,393,394,427,438,463,],[-26,-27,-28,-29,-28,-296,273,-297,-298,-296,-296,-296,-231,-296,-230,-230,-231,-238,-239,-28,]),'RSHIFTEQ':([25,26,27,42,143,162,163,169,170,216,255,307,340,349,366,393,394,427,438,463,],[-26,-27,-28,-29,-28,-296,274,-297,-298,-296,-296,-296,-231,-296,-230,-230,-231,-238,-239,-28,]),'INCREMENT':([25,26,27,42,90,92,115,116,118,119,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,149,152,153,158,159,160,161,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,187,202,205,206,207,216,218,220,222,223,231,232,237,238,239,241,242,243,245,248,249,250,251,252,253,255,257,259,261,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,282,283,287,288,295,307,308,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,340,341,345,349,352,353,354,355,356,357,358,363,366,367,368,369,370,371,379,380,381,383,386,393,394,413,414,415,416,417,418,420,422,423,424,425,427,428,429,430,431,433,434,435,437,438,440,441,444,447,449,452,454,456,458,463,466,467,470,472,474,479,480,481,484,489,490,491,492,493,494,496,497,498,499,501,502,504,506,507,511,514,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,540,542,543,544,545,546,547,550,553,554,555,556,558,559,560,563,565,568,570,573,],[-26,-27,-28,-29,164,164,164,164,-211,164,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-28,164,164,164,-242,-243,-215,-213,-241,164,164,282,-240,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-115,164,-211,164,164,-118,164,164,-241,-240,-208,-213,-215,164,164,282,164,164,-242,-243,164,-121,164,164,164,164,-147,164,-241,-195,-197,-199,164,164,164,-299,-300,-301,-302,-303,-304,-305,-306,-240,-241,164,-214,-216,-244,-245,164,-116,164,-241,-212,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,-231,-145,164,-241,-194,-196,-198,-200,-201,-203,-204,-233,-230,164,-224,-225,164,-222,164,-108,-212,164,164,-230,-231,-110,164,164,164,164,164,164,164,-202,-205,-207,-238,-232,-212,164,-217,-223,-226,164,-221,-239,164,-107,164,-228,164,-109,-237,-155,-123,-28,-170,164,164,164,-158,-235,-218,-227,-229,-236,164,164,164,164,164,164,164,164,-180,164,-159,164,-166,164,-234,-156,164,164,-177,164,-179,164,-178,164,-161,-162,-167,164,-169,-172,-206,164,164,164,164,-175,164,-176,-174,-160,-168,164,164,164,-173,164,164,164,164,164,164,164,164,164,]),'DECREMENT':([25,26,27,42,90,92,115,116,118,119,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,149,152,153,158,159,160,161,162,164,165,166,167,169,170,171,172,173,174,175,176,177,178,179,180,182,187,202,205,206,207,216,218,220,222,223,231,232,237,238,239,241,242,243,245,248,249,250,251,252,253,255,257,259,261,264,265,266,267,268,269,270,271,272,273,274,276,277,278,279,280,282,283,287,288,295,307,308,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,340,341,345,349,352,353,354,355,356,357,358,363,366,367,368,369,370,371,379,380,381,383,386,393,394,413,414,415,416,417,418,420,422,423,424,425,427,428,429,430,431,433,434,435,437,438,440,441,444,447,449,452,454,456,458,463,466,467,470,472,474,479,480,481,484,489,490,491,492,493,494,496,497,498,499,501,502,504,506,507,511,514,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,540,542,543,544,545,546,547,550,553,554,555,556,558,559,560,563,565,568,570,573,],[-26,-27,-28,-29,165,165,165,165,-211,165,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-28,165,165,165,-242,-243,-215,-213,-241,165,165,283,-240,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-115,165,-211,165,165,-118,165,165,-241,-240,-208,-213,-215,165,165,283,165,165,-242,-243,165,-121,165,165,165,165,-147,165,-241,-195,-197,-199,165,165,165,-299,-300,-301,-302,-303,-304,-305,-306,-240,-241,165,-214,-216,-244,-245,165,-116,165,-241,-212,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-231,-145,165,-241,-194,-196,-198,-200,-201,-203,-204,-233,-230,165,-224,-225,165,-222,165,-108,-212,165,165,-230,-231,-110,165,165,165,165,165,165,165,-202,-205,-207,-238,-232,-212,165,-217,-223,-226,165,-221,-239,165,-107,165,-228,165,-109,-237,-155,-123,-28,-170,165,165,165,-158,-235,-218,-227,-229,-236,165,165,165,165,165,165,165,165,-180,165,-159,165,-166,165,-234,-156,165,165,-177,165,-179,165,-178,165,-161,-162,-167,165,-169,-172,-206,165,165,165,165,-175,165,-176,-174,-160,-168,165,165,165,-173,165,165,165,165,165,165,165,165,165,]),'MULT':([25,26,27,36,42,169,170,171,172,173,174,175,176,177,178,182,216,218,220,222,223,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,43,-29,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-241,-240,-208,-213,-215,331,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,331,331,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'DIVIDE':([25,26,27,42,169,170,171,172,173,174,175,176,177,178,182,216,218,220,222,223,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-241,-240,-208,-213,-215,332,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,332,332,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'MODULO':([25,26,27,42,169,170,171,172,173,174,175,176,177,178,182,216,218,220,222,223,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-241,-240,-208,-213,-215,333,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,333,333,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'PLUS':([25,26,27,42,119,152,153,164,165,169,170,171,172,173,174,175,176,177,178,182,187,206,207,216,218,220,222,223,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,250,253,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,287,295,307,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,345,363,367,368,369,370,371,379,381,383,386,393,394,405,406,407,408,409,410,411,414,417,422,427,428,429,430,431,433,434,435,437,438,440,443,444,446,447,449,454,479,480,481,483,484,485,489,490,493,507,511,518,539,],[-26,-27,-28,-29,231,231,231,231,231,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,231,231,231,-241,-240,-208,-213,-215,329,-265,231,231,-261,-246,-247,-250,-253,231,231,-256,-242,-243,231,231,231,231,231,231,231,-299,-300,-301,-302,-303,-304,-305,-306,-251,-240,-241,231,-214,-216,-252,-244,-245,231,231,-241,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,-248,-249,-254,-255,231,-233,231,-224,-225,231,-222,231,-212,231,231,-230,-231,329,329,-266,-267,-262,-263,-264,231,231,231,-238,-232,-212,231,-217,-223,-226,231,-221,-239,231,-259,231,-258,-228,231,-237,-235,-218,-227,-257,-229,-260,-236,231,231,231,-234,231,231,]),'MINUS':([25,26,27,42,119,152,153,164,165,169,170,171,172,173,174,175,176,177,178,182,187,206,207,216,218,220,222,223,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,249,250,253,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,287,295,307,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,334,335,336,337,345,363,367,368,369,370,371,379,381,383,386,393,394,405,406,407,408,409,410,411,414,417,422,427,428,429,430,431,433,434,435,437,438,440,443,444,446,447,449,454,479,480,481,483,484,485,489,490,493,507,511,518,539,],[-26,-27,-28,-29,232,232,232,232,232,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,232,232,232,-241,-240,-208,-213,-215,330,-265,232,232,-261,-246,-247,-250,-253,232,232,-256,-242,-243,232,232,232,232,232,232,232,-299,-300,-301,-302,-303,-304,-305,-306,-251,-240,-241,232,-214,-216,-252,-244,-245,232,232,-241,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,-248,-249,-254,-255,232,-233,232,-224,-225,232,-222,232,-212,232,232,-230,-231,330,330,-266,-267,-262,-263,-264,232,232,232,-238,-232,-212,232,-217,-223,-226,232,-221,-239,232,-259,232,-258,-228,232,-237,-235,-218,-227,-257,-229,-260,-236,232,232,232,-234,232,232,]),'L_SHIFT':([25,26,27,42,169,170,171,172,173,174,175,176,177,178,182,216,218,220,222,223,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,399,400,401,402,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-241,-240,-208,-213,-215,327,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,327,327,327,327,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'R_SHIFT':([25,26,27,42,169,170,171,172,173,174,175,176,177,178,182,216,218,220,222,223,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,399,400,401,402,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-241,-240,-208,-213,-215,328,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,328,328,328,328,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'LST':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,216,218,220,222,223,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,-241,-240,-208,-213,-215,322,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,322,322,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'GRT':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,216,218,220,222,223,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,-241,-240,-208,-213,-215,323,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,323,323,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'LEQ':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,216,218,220,222,223,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,-241,-240,-208,-213,-215,324,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,324,324,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'GEQ':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,216,218,220,222,223,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,-241,-240,-208,-213,-215,325,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,325,325,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'INSTANCEOF':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,216,218,220,222,223,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,-241,-240,-208,-213,-215,326,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,326,326,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'EQUALS':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,216,218,220,222,223,226,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,-241,-240,-208,-213,-215,320,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,320,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'NOT_EQUAL':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,216,218,220,222,223,226,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,-241,-240,-208,-213,-215,321,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,321,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'BITWISE_AND':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,216,218,220,222,223,224,226,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,-241,-240,-208,-213,-215,318,-280,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-230,-231,318,-281,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'BITWISE_XOR':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,216,218,220,221,222,223,224,226,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,392,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,-241,-240,-208,317,-213,-215,-282,-280,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,317,-230,-231,-283,-281,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'BITWISE_OR':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,216,217,218,220,221,222,223,224,226,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,-241,314,-240,-208,-284,-213,-215,-282,-280,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,314,-285,-230,-231,-283,-281,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'LOGICAL_AND':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,215,216,217,218,220,221,222,223,224,226,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,388,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,312,-241,-286,-240,-208,-284,-213,-215,-282,-280,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,312,-287,-285,-230,-231,-283,-281,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'QUESTION':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,213,215,216,217,218,220,221,222,223,224,226,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,388,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,309,-288,-241,-286,-240,-208,-284,-213,-215,-282,-280,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-289,-287,-285,-230,-231,-283,-281,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'LOGICAL_OR':([25,26,27,42,68,69,72,169,170,171,172,173,174,175,176,177,178,182,193,195,196,213,215,216,217,218,220,221,222,223,224,226,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,307,334,335,336,337,363,368,369,371,381,388,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,479,480,481,483,484,485,489,511,],[-26,-27,-28,-29,-20,-21,-22,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-211,-23,-25,-24,310,-288,-241,-286,-240,-208,-284,-213,-215,-282,-280,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-241,-248,-249,-254,-255,-233,-224,-225,-222,-212,-289,-287,-285,-230,-231,-283,-281,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,-235,-218,-227,-257,-229,-260,-236,-234,]),'R_PAREN':([25,26,27,42,66,67,68,69,70,71,72,73,74,75,76,77,78,79,101,155,156,157,158,159,160,161,169,170,171,172,173,174,175,176,177,178,179,182,186,189,191,193,195,196,206,208,209,210,211,212,213,215,216,217,218,220,221,222,223,224,226,227,228,229,230,233,234,235,236,237,240,241,242,243,247,265,275,276,277,279,280,281,282,283,288,291,296,299,302,304,305,306,307,311,334,335,336,337,338,342,343,348,350,362,363,364,365,367,368,369,371,377,381,382,385,388,389,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,414,418,427,428,429,430,431,432,433,434,437,438,442,443,446,447,453,454,467,469,471,472,473,476,477,478,479,480,481,483,484,485,486,488,489,495,497,500,511,512,513,516,521,540,550,552,554,557,559,562,567,],[-26,-27,-28,-29,-9,-10,-20,-21,-11,-12,-22,-13,-14,-15,-16,-17,-18,-19,190,-148,-149,-150,-151,-152,-153,-154,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-115,-211,290,297,-88,-23,-25,-24,303,308,-307,-292,-293,-294,-290,-288,-241,-286,-240,-208,-284,-213,-215,-282,-280,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,339,-73,363,-251,-240,-241,-214,-216,-252,-244,-245,-116,373,-74,-90,378,-219,381,383,-241,390,-248,-249,-254,-255,412,415,416,-192,421,428,-233,-295,429,431,-224,-225,-222,-89,-212,444,448,-289,450,-287,-285,-230,-231,-283,-281,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,454,470,-238,-232,-212,479,-217,480,-223,-226,-221,-239,-220,-259,-258,-228,489,-237,496,498,-191,501,-193,509,510,511,-235,-218,-227,-257,-229,-260,-291,-309,-236,519,522,524,-234,-308,537,538,543,553,558,560,563,565,568,570,573,]),'R_SQBR':([25,26,27,42,68,69,72,102,105,106,169,170,171,172,173,174,175,176,177,178,179,182,188,193,195,196,209,210,211,212,213,215,216,217,218,220,221,222,223,224,226,227,228,229,230,233,234,235,236,237,240,241,242,264,275,276,277,279,280,281,282,283,288,334,335,336,337,361,363,364,368,369,371,372,381,384,386,388,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,435,436,437,438,443,445,446,447,454,479,480,481,483,484,485,486,488,489,511,512,],[-26,-27,-28,-29,-20,-21,-22,193,195,196,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-115,-211,296,-23,-25,-24,-307,-292,-293,-294,-290,-288,-241,-286,-240,-208,-284,-213,-215,-282,-280,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,196,-251,-240,-241,-214,-216,-252,-244,-245,-116,-248,-249,-254,-255,427,-233,-295,-224,-225,-222,438,-212,447,447,-289,-287,-285,-230,-231,-283,-281,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,447,481,-221,-239,-259,484,-258,-228,-237,-235,-218,-227,-257,-229,-260,-291,-309,-236,-234,-308,]),'BLOCK_CLOSER':([25,26,27,41,42,50,51,52,53,54,55,56,68,69,72,83,88,90,91,92,98,99,100,108,112,115,116,117,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,169,170,171,172,173,174,175,176,177,178,179,180,182,183,193,195,196,197,198,202,203,204,205,209,210,211,212,213,215,216,217,218,220,221,222,223,224,226,227,228,229,230,233,234,235,236,237,240,241,242,245,252,257,259,261,275,276,277,279,280,281,282,283,288,293,294,295,301,334,335,336,337,341,352,353,354,355,356,357,358,363,364,368,369,371,374,375,376,380,381,388,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,413,423,424,425,427,428,429,431,433,434,437,438,439,441,443,446,447,452,454,456,458,466,474,475,479,480,481,482,483,484,485,486,488,489,499,502,503,504,505,506,511,512,514,520,523,525,526,527,528,529,530,531,534,535,536,542,544,545,546,547,555,],[-26,-27,-28,49,-29,82,-60,-62,-63,-64,-65,-66,-20,-21,-22,-61,-100,117,-96,179,-77,-94,-95,-98,-99,203,204,-106,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-115,288,-211,-68,-23,-25,-24,-97,-67,301,-104,-105,-118,-307,-292,-293,-294,-290,-288,-241,-286,-240,-208,-284,-213,-215,-282,-280,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-121,-147,-195,-197,-199,-251,-240,-241,-214,-216,-252,-244,-245,-116,-75,-76,375,-103,-248,-249,-254,-255,-145,-194,-196,-198,-200,-201,-203,-204,-233,-295,-224,-225,-222,439,-112,-113,-108,-212,-289,-287,-285,-230,-231,-283,-281,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-110,-202,-205,-207,-238,-232,-212,-217,-223,-226,-221,-239,-111,-107,-259,-258,-228,-109,-237,-155,-123,-170,-158,502,-235,-218,-227,-114,-257,-229,-260,-291,-309,-236,-180,-159,527,529,-163,-166,-234,-308,-156,-177,-179,-178,546,-161,-164,-162,-167,-165,-169,-172,-206,-175,-176,-174,-160,-168,-173,]),'COLON':([25,26,27,42,68,69,72,143,169,170,171,172,173,174,175,176,177,178,179,182,193,195,196,209,210,211,212,213,215,216,217,218,220,221,222,223,224,226,227,228,229,230,233,234,235,236,237,240,241,242,275,276,277,279,280,281,282,283,288,334,335,336,337,363,364,368,369,371,381,387,388,391,392,393,394,395,396,397,398,399,400,401,402,403,405,406,407,408,409,410,411,427,428,429,431,433,434,437,438,443,446,447,454,463,479,480,481,483,484,485,486,488,489,508,511,512,532,533,],[-26,-27,-28,-29,-20,-21,-22,248,-214,-216,-208,-209,-210,-2,-3,-4,-5,-6,-115,-211,-23,-25,-24,-307,-292,-293,-294,-290,-288,-241,-286,-240,-208,-284,-213,-215,-282,-280,-277,-271,-268,-265,-261,-246,-247,-250,-253,-256,-242,-243,-251,-240,-241,-214,-216,-252,-244,-245,-116,-248,-249,-254,-255,-233,-295,-224,-225,-222,-212,449,-289,-287,-285,-230,-231,-283,-281,-278,-279,-272,-273,-274,-275,-276,-269,-270,-266,-267,-262,-263,-264,-238,-232,-212,-217,-223,-226,-221,-239,-259,-258,-228,-237,492,-235,-218,-227,-257,-229,-260,-291,-309,-236,534,-234,-308,547,-310,]),'EXTENDS':([31,37,],[40,40,]),'THROWS':([58,84,94,103,110,111,190,290,297,373,],[89,89,89,89,89,89,-102,-86,-101,-87,]),'THIS':([90,92,115,116,119,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,152,153,164,165,179,180,187,202,205,206,207,231,232,238,239,243,245,248,249,250,251,252,253,257,259,261,264,265,266,267,268,269,270,271,272,273,274,278,287,288,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,341,345,352,353,354,355,356,357,358,367,370,379,380,381,383,386,413,414,415,416,417,418,420,422,423,424,425,429,430,435,440,441,444,448,449,452,456,458,466,467,470,472,474,490,491,492,493,494,496,497,498,499,501,502,504,506,507,514,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,540,542,543,544,545,546,547,550,553,554,555,556,558,559,560,563,565,568,570,573,],[118,182,182,182,182,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,182,182,182,182,182,-115,182,182,182,-118,182,182,182,182,182,182,182,-121,182,182,182,182,-147,182,-195,-197,-199,182,182,182,-299,-300,-301,-302,-303,-304,-305,-306,182,182,-116,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,-145,182,-194,-196,-198,-200,-201,-203,-204,182,182,182,-108,182,182,182,-110,182,182,182,182,182,182,182,-202,-205,-207,182,182,182,182,-107,182,182,182,-109,-155,-123,-170,182,182,182,-158,182,182,182,182,182,182,182,182,-180,182,-159,182,-166,182,-156,182,182,-177,182,-179,182,-178,182,-161,-162,-167,182,-169,-172,-206,182,182,182,182,-175,182,-176,-174,-160,-168,182,182,182,-173,182,182,182,182,182,182,182,182,182,]),'SUPER':([90,92,115,116,119,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,152,153,164,165,179,180,187,202,205,206,207,231,232,238,239,243,245,248,249,250,251,252,253,257,259,261,264,265,266,267,268,269,270,271,272,273,274,278,287,288,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,341,345,352,353,354,355,356,357,358,367,370,379,380,381,383,386,413,414,415,416,417,418,420,422,423,424,425,429,430,435,440,441,444,448,449,452,456,458,466,467,470,472,474,490,491,492,493,494,496,497,498,499,501,502,504,506,507,514,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,540,542,543,544,545,546,547,550,553,554,555,556,558,559,560,563,565,568,570,573,],[121,181,181,181,219,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,181,219,219,219,219,-115,181,219,181,-118,219,219,219,219,219,219,219,-121,181,219,219,181,-147,219,-195,-197,-199,219,219,219,-299,-300,-301,-302,-303,-304,-305,-306,219,219,-116,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,-145,219,-194,-196,-198,-200,-201,-203,-204,219,219,219,-108,219,219,219,-110,219,181,181,219,181,181,219,-202,-205,-207,219,219,219,219,-107,219,219,219,-109,-155,-123,-170,181,181,181,-158,219,181,181,219,181,181,181,181,-180,181,-159,181,-166,219,-156,219,181,-177,181,-179,181,-178,181,-161,-162,-167,181,-169,-172,-206,181,181,219,181,-175,181,-176,-174,-160,-168,181,181,181,-173,181,181,181,181,181,181,181,181,181,]),'IF':([90,92,115,116,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,179,180,202,205,245,248,252,257,259,261,288,341,352,353,354,355,356,357,358,380,413,415,416,423,424,425,441,452,456,458,466,470,474,491,492,496,498,499,501,502,504,506,514,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,542,543,544,545,546,547,553,555,556,558,560,563,565,568,570,573,],[144,144,144,144,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,144,-115,144,144,-118,-121,144,-147,-195,-197,-199,-116,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,455,144,-202,-205,-207,-107,-109,-155,-123,-170,144,-158,144,455,144,144,-180,144,-159,144,-166,-156,144,-177,144,-179,144,-178,144,-161,-162,-167,144,-169,-172,-206,455,455,-175,144,-176,-174,-160,-168,455,-173,455,455,455,455,455,455,455,455,]),'WHILE':([90,92,115,116,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,179,180,202,205,245,248,252,254,257,259,261,288,341,352,353,354,355,356,357,358,380,413,415,416,423,424,425,441,452,456,458,466,470,474,491,492,496,498,499,501,502,504,506,514,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,542,543,544,545,546,547,553,555,556,558,560,563,565,568,570,573,],[145,145,145,145,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,145,-115,145,145,-118,-121,145,-147,351,-195,-197,-199,-116,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,464,145,-202,-205,-207,-107,-109,-155,-123,-170,145,-158,145,464,145,145,-180,145,-159,145,-166,-156,145,-177,145,-179,145,-178,145,-161,-162,-167,145,-169,-172,-206,464,464,-175,145,-176,-174,-160,-168,464,-173,464,464,464,464,464,464,464,464,]),'FOR':([90,92,115,116,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,179,180,202,205,245,248,252,257,259,261,288,341,352,353,354,355,356,357,358,380,413,415,416,423,424,425,441,452,456,458,466,470,474,491,492,496,498,499,501,502,504,506,514,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,542,543,544,545,546,547,553,555,556,558,560,563,565,568,570,573,],[146,146,146,146,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,146,-115,146,146,-118,-121,146,-147,-195,-197,-199,-116,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,465,146,-202,-205,-207,-107,-109,-155,-123,-170,146,-158,146,465,146,146,-180,146,-159,146,-166,-156,146,-177,146,-179,146,-178,146,-161,-162,-167,146,-169,-172,-206,465,465,-175,146,-176,-174,-160,-168,465,-173,465,465,465,465,465,465,465,465,]),'SWITCH':([90,92,115,116,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,179,180,202,205,245,248,252,257,259,261,288,341,352,353,354,355,356,357,358,380,413,415,416,423,424,425,441,452,456,458,466,470,474,491,492,496,498,499,501,502,504,506,514,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,542,543,544,545,546,547,553,555,556,558,560,563,565,568,570,573,],[148,148,148,148,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,148,-115,148,148,-118,-121,148,-147,-195,-197,-199,-116,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,148,148,-202,-205,-207,-107,-109,-155,-123,-170,148,-158,148,148,148,148,-180,148,-159,148,-166,-156,148,-177,148,-179,148,-178,148,-161,-162,-167,148,-169,-172,-206,148,148,-175,148,-176,-174,-160,-168,148,-173,148,148,148,148,148,148,148,148,]),'DO':([90,92,115,116,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,179,180,202,205,245,248,252,257,259,261,288,341,352,353,354,355,356,357,358,380,413,415,416,423,424,425,441,452,456,458,466,470,474,491,492,496,498,499,501,502,504,506,514,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,542,543,544,545,546,547,553,555,556,558,560,563,565,568,570,573,],[149,149,149,149,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,149,-115,149,149,-118,-121,149,-147,-195,-197,-199,-116,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,149,149,-202,-205,-207,-107,-109,-155,-123,-170,149,-158,149,149,149,149,-180,149,-159,149,-166,-156,149,-177,149,-179,149,-178,149,-161,-162,-167,149,-169,-172,-206,149,149,-175,149,-176,-174,-160,-168,149,-173,149,149,149,149,149,149,149,149,]),'BREAK':([90,92,115,116,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,179,180,202,205,245,248,252,257,259,261,288,341,352,353,354,355,356,357,358,380,413,415,416,423,424,425,441,452,456,458,466,470,474,491,492,496,498,499,501,502,504,506,514,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,542,543,544,545,546,547,553,555,556,558,560,563,565,568,570,573,],[150,150,150,150,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,150,-115,150,150,-118,-121,150,-147,-195,-197,-199,-116,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,150,150,-202,-205,-207,-107,-109,-155,-123,-170,150,-158,150,150,150,150,-180,150,-159,150,-166,-156,150,-177,150,-179,150,-178,150,-161,-162,-167,150,-169,-172,-206,150,150,-175,150,-176,-174,-160,-168,150,-173,150,150,150,150,150,150,150,150,]),'CONTINUE':([90,92,115,116,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,179,180,202,205,245,248,252,257,259,261,288,341,352,353,354,355,356,357,358,380,413,415,416,423,424,425,441,452,456,458,466,470,474,491,492,496,498,499,501,502,504,506,514,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,542,543,544,545,546,547,553,555,556,558,560,563,565,568,570,573,],[151,151,151,151,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,151,-115,151,151,-118,-121,151,-147,-195,-197,-199,-116,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,151,151,-202,-205,-207,-107,-109,-155,-123,-170,151,-158,151,151,151,151,-180,151,-159,151,-166,-156,151,-177,151,-179,151,-178,151,-161,-162,-167,151,-169,-172,-206,151,151,-175,151,-176,-174,-160,-168,151,-173,151,151,151,151,151,151,151,151,]),'RETURN':([90,92,115,116,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,179,180,202,205,245,248,252,257,259,261,288,341,352,353,354,355,356,357,358,380,413,415,416,423,424,425,441,452,456,458,466,470,474,491,492,496,498,499,501,502,504,506,514,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,542,543,544,545,546,547,553,555,556,558,560,563,565,568,570,573,],[152,152,152,152,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,152,-115,152,152,-118,-121,152,-147,-195,-197,-199,-116,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,152,152,-202,-205,-207,-107,-109,-155,-123,-170,152,-158,152,152,152,152,-180,152,-159,152,-166,-156,152,-177,152,-179,152,-178,152,-161,-162,-167,152,-169,-172,-206,152,152,-175,152,-176,-174,-160,-168,152,-173,152,152,152,152,152,152,152,152,]),'THROW':([90,92,115,116,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,179,180,202,205,245,248,252,257,259,261,288,341,352,353,354,355,356,357,358,380,413,415,416,423,424,425,441,452,456,458,466,470,474,491,492,496,498,499,501,502,504,506,514,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,542,543,544,545,546,547,553,555,556,558,560,563,565,568,570,573,],[153,153,153,153,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,153,-115,153,153,-118,-121,153,-147,-195,-197,-199,-116,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,153,153,-202,-205,-207,-107,-109,-155,-123,-170,153,-158,153,153,153,153,-180,153,-159,153,-166,-156,153,-177,153,-179,153,-178,153,-161,-162,-167,153,-169,-172,-206,153,153,-175,153,-176,-174,-160,-168,153,-173,153,153,153,153,153,153,153,153,]),'TRY':([90,92,115,116,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,179,180,202,205,245,248,252,257,259,261,288,341,352,353,354,355,356,357,358,380,413,415,416,423,424,425,441,452,456,458,466,470,474,491,492,496,498,499,501,502,504,506,514,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,542,543,544,545,546,547,553,555,556,558,560,563,565,568,570,573,],[154,154,154,154,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,154,-115,154,154,-118,-121,154,-147,-195,-197,-199,-116,-145,-194,-196,-198,-200,-201,-203,-204,-108,-110,154,154,-202,-205,-207,-107,-109,-155,-123,-170,154,-158,154,154,154,154,-180,154,-159,154,-166,-156,154,-177,154,-179,154,-178,154,-161,-162,-167,154,-169,-172,-206,154,154,-175,154,-176,-174,-160,-168,154,-173,154,154,154,154,154,154,154,154,]),'NEW':([90,92,115,116,119,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,152,153,164,165,179,180,187,202,205,206,207,231,232,238,239,243,245,248,249,250,251,252,253,257,259,261,264,265,266,267,268,269,270,271,272,273,274,278,287,288,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,341,345,352,353,354,355,356,357,358,367,370,379,380,381,383,386,413,414,415,416,417,418,420,422,423,424,425,429,430,435,440,441,444,448,449,452,456,458,466,467,470,472,474,490,491,492,493,494,496,497,498,499,501,502,504,506,507,514,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,540,542,543,544,545,546,547,550,553,554,555,556,558,559,560,563,565,568,570,573,],[168,168,168,168,225,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,168,225,225,225,225,-115,168,225,168,-118,225,225,225,225,225,225,225,-121,168,225,225,168,-147,225,-195,-197,-199,225,225,225,-299,-300,-301,-302,-303,-304,-305,-306,225,225,-116,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,-145,225,-194,-196,-198,-200,-201,-203,-204,225,225,225,-108,225,225,225,-110,225,168,168,225,168,168,225,-202,-205,-207,225,225,225,225,-107,225,225,225,-109,-155,-123,-170,168,168,168,-158,225,168,168,225,168,168,168,168,-180,168,-159,168,-166,225,-156,225,168,-177,168,-179,168,-178,168,-161,-162,-167,168,-169,-172,-206,168,168,225,168,-175,168,-176,-174,-160,-168,168,168,168,-173,168,168,168,168,168,168,168,168,168,]),'INT_CONSTANT':([90,92,115,116,119,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,152,153,164,165,179,180,187,202,205,206,207,231,232,238,239,243,245,248,249,250,251,252,253,257,259,261,264,265,266,267,268,269,270,271,272,273,274,278,287,288,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,341,345,352,353,354,355,356,357,358,367,370,379,380,381,383,386,413,414,415,416,417,418,420,422,423,424,425,429,430,435,440,441,444,448,449,452,456,458,466,467,470,472,474,490,491,492,493,494,496,497,498,499,501,502,504,506,507,514,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,540,542,543,544,545,546,547,550,553,554,555,556,558,559,560,563,565,568,570,573,],[174,174,174,174,174,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,174,174,174,174,174,-115,174,174,174,-118,174,174,174,174,174,174,174,-121,174,174,174,174,-147,174,-195,-197,-199,174,174,174,-299,-300,-301,-302,-303,-304,-305,-306,174,174,-116,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-145,174,-194,-196,-198,-200,-201,-203,-204,174,174,174,-108,174,174,174,-110,174,174,174,174,174,174,174,-202,-205,-207,174,174,174,174,-107,174,174,174,-109,-155,-123,-170,174,174,174,-158,174,174,174,174,174,174,174,174,-180,174,-159,174,-166,174,-156,174,174,-177,174,-179,174,-178,174,-161,-162,-167,174,-169,-172,-206,174,174,174,174,-175,174,-176,-174,-160,-168,174,174,174,-173,174,174,174,174,174,174,174,174,174,]),'FLOAT_CONSTANT':([90,92,115,116,119,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,152,153,164,165,179,180,187,202,205,206,207,231,232,238,239,243,245,248,249,250,251,252,253,257,259,261,264,265,266,267,268,269,270,271,272,273,274,278,287,288,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,341,345,352,353,354,355,356,357,358,367,370,379,380,381,383,386,413,414,415,416,417,418,420,422,423,424,425,429,430,435,440,441,444,448,449,452,456,458,466,467,470,472,474,490,491,492,493,494,496,497,498,499,501,502,504,506,507,514,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,540,542,543,544,545,546,547,550,553,554,555,556,558,559,560,563,565,568,570,573,],[175,175,175,175,175,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,175,175,175,175,175,-115,175,175,175,-118,175,175,175,175,175,175,175,-121,175,175,175,175,-147,175,-195,-197,-199,175,175,175,-299,-300,-301,-302,-303,-304,-305,-306,175,175,-116,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,-145,175,-194,-196,-198,-200,-201,-203,-204,175,175,175,-108,175,175,175,-110,175,175,175,175,175,175,175,-202,-205,-207,175,175,175,175,-107,175,175,175,-109,-155,-123,-170,175,175,175,-158,175,175,175,175,175,175,175,175,-180,175,-159,175,-166,175,-156,175,175,-177,175,-179,175,-178,175,-161,-162,-167,175,-169,-172,-206,175,175,175,175,-175,175,-176,-174,-160,-168,175,175,175,-173,175,175,175,175,175,175,175,175,175,]),'CHAR_CONSTANT':([90,92,115,116,119,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,152,153,164,165,179,180,187,202,205,206,207,231,232,238,239,243,245,248,249,250,251,252,253,257,259,261,264,265,266,267,268,269,270,271,272,273,274,278,287,288,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,341,345,352,353,354,355,356,357,358,367,370,379,380,381,383,386,413,414,415,416,417,418,420,422,423,424,425,429,430,435,440,441,444,448,449,452,456,458,466,467,470,472,474,490,491,492,493,494,496,497,498,499,501,502,504,506,507,514,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,540,542,543,544,545,546,547,550,553,554,555,556,558,559,560,563,565,568,570,573,],[176,176,176,176,176,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,176,176,176,176,176,-115,176,176,176,-118,176,176,176,176,176,176,176,-121,176,176,176,176,-147,176,-195,-197,-199,176,176,176,-299,-300,-301,-302,-303,-304,-305,-306,176,176,-116,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,-145,176,-194,-196,-198,-200,-201,-203,-204,176,176,176,-108,176,176,176,-110,176,176,176,176,176,176,176,-202,-205,-207,176,176,176,176,-107,176,176,176,-109,-155,-123,-170,176,176,176,-158,176,176,176,176,176,176,176,176,-180,176,-159,176,-166,176,-156,176,176,-177,176,-179,176,-178,176,-161,-162,-167,176,-169,-172,-206,176,176,176,176,-175,176,-176,-174,-160,-168,176,176,176,-173,176,176,176,176,176,176,176,176,176,]),'STR_CONSTANT':([90,92,115,116,119,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,152,153,164,165,179,180,187,202,205,206,207,231,232,238,239,243,245,248,249,250,251,252,253,257,259,261,264,265,266,267,268,269,270,271,272,273,274,278,287,288,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,341,345,352,353,354,355,356,357,358,367,370,379,380,381,383,386,413,414,415,416,417,418,420,422,423,424,425,429,430,435,440,441,444,448,449,452,456,458,466,467,470,472,474,490,491,492,493,494,496,497,498,499,501,502,504,506,507,514,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,540,542,543,544,545,546,547,550,553,554,555,556,558,559,560,563,565,568,570,573,],[177,177,177,177,177,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,177,177,177,177,177,-115,177,177,177,-118,177,177,177,177,177,177,177,-121,177,177,177,177,-147,177,-195,-197,-199,177,177,177,-299,-300,-301,-302,-303,-304,-305,-306,177,177,-116,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,-145,177,-194,-196,-198,-200,-201,-203,-204,177,177,177,-108,177,177,177,-110,177,177,177,177,177,177,177,-202,-205,-207,177,177,177,177,-107,177,177,177,-109,-155,-123,-170,177,177,177,-158,177,177,177,177,177,177,177,177,-180,177,-159,177,-166,177,-156,177,177,-177,177,-179,177,-178,177,-161,-162,-167,177,-169,-172,-206,177,177,177,177,-175,177,-176,-174,-160,-168,177,177,177,-173,177,177,177,177,177,177,177,177,177,]),'NULL':([90,92,115,116,119,120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,149,152,153,164,165,179,180,187,202,205,206,207,231,232,238,239,243,245,248,249,250,251,252,253,257,259,261,264,265,266,267,268,269,270,271,272,273,274,278,287,288,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,341,345,352,353,354,355,356,357,358,367,370,379,380,381,383,386,413,414,415,416,417,418,420,422,423,424,425,429,430,435,440,441,444,448,449,452,456,458,466,467,470,472,474,490,491,492,493,494,496,497,498,499,501,502,504,506,507,514,518,519,520,522,523,524,525,526,527,529,530,531,534,535,536,537,538,539,540,542,543,544,545,546,547,550,553,554,555,556,558,559,560,563,565,568,570,573,],[178,178,178,178,178,-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,178,178,178,178,178,-115,178,178,178,-118,178,178,178,178,178,178,178,-121,178,178,178,178,-147,178,-195,-197,-199,178,178,178,-299,-300,-301,-302,-303,-304,-305,-306,178,178,-116,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,-145,178,-194,-196,-198,-200,-201,-203,-204,178,178,178,-108,178,178,178,-110,178,178,178,178,178,178,178,-202,-205,-207,178,178,178,178,-107,178,178,178,-109,-155,-123,-170,178,178,178,-158,178,178,178,178,178,178,178,178,-180,178,-159,178,-166,178,-156,178,178,-177,178,-179,178,-178,178,-161,-162,-167,178,-169,-172,-206,178,178,178,178,-175,178,-176,-174,-160,-168,178,178,178,-173,178,178,178,178,178,178,178,178,178,]),'LAMBDA':([119,152,153,187,206,207,243,249,250,253,264,265,266,267,268,269,270,271,272,273,274,278,287,295,309,313,345,367,370,379,386,414,417,422,430,435,440,490,493,507,518,539,],[214,214,214,214,214,214,214,214,214,214,214,214,214,-299,-300,-301,-302,-303,-304,-305,-306,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,]),'BITWISE_NOT':([119,152,153,164,165,187,206,207,231,232,238,239,243,249,250,253,264,265,266,267,268,269,270,271,272,273,274,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,417,422,429,430,435,440,444,448,449,490,493,507,518,539,],[238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,-299,-300,-301,-302,-303,-304,-305,-306,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,]),'LOGICAL_NOT':([119,152,153,164,165,187,206,207,231,232,238,239,243,249,250,253,264,265,266,267,268,269,270,271,272,273,274,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,417,422,429,430,435,440,444,448,449,490,493,507,518,539,],[239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,-299,-300,-301,-302,-303,-304,-305,-306,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,]),'CASE':([120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,179,205,245,252,257,259,261,288,341,352,353,354,355,356,357,358,423,424,425,456,458,466,474,475,499,502,503,504,505,506,514,520,523,525,526,527,528,529,530,531,534,535,536,542,544,545,546,547,555,],[-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-115,-118,-121,-147,-195,-197,-199,-116,-145,-194,-196,-198,-200,-201,-203,-204,-202,-205,-207,-155,-123,-170,-158,507,-180,-159,507,507,-163,-166,-156,-177,-179,-178,507,-161,-164,-162,-167,-165,-169,-172,-206,-175,-176,-174,-160,-168,-173,]),'DEFAULT':([120,122,123,124,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,179,205,245,252,257,259,261,288,341,352,353,354,355,356,357,358,423,424,425,456,458,466,474,475,499,502,503,504,505,506,514,520,523,525,526,527,528,529,530,531,534,535,536,542,544,545,546,547,555,],[-144,-117,-119,-120,-123,-124,-125,-126,-127,-128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-115,-118,-121,-147,-195,-197,-199,-116,-145,-194,-196,-198,-200,-201,-203,-204,-202,-205,-207,-155,-123,-170,-158,508,-180,-159,508,508,-163,-166,-156,-177,-179,-178,508,-161,-164,-162,-167,-165,-169,-172,-206,-175,-176,-174,-160,-168,-173,]),'ELSE':([120,133,134,135,136,137,138,139,140,141,142,179,252,257,259,261,288,352,353,354,355,356,357,358,423,424,425,457,458,459,460,461,462,474,502,515,527,529,535,536,546,548,549,561,564,566,569,571,572,574,575,576,],[-144,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-115,-147,-195,-197,-199,-116,-194,-196,-198,-200,-201,-203,-204,-202,-205,-207,491,-129,-130,-131,-132,-133,-158,-159,-146,-161,-162,-172,-206,-160,556,-171,-188,-157,-185,-187,-186,-183,-184,-182,-181,]),'FINALLY':([179,263,288,356,358,424,536,],[-115,359,-116,359,-204,-205,-206,]),'CATCH':([179,263,288,356,358,424,536,],[-115,360,-116,360,-204,-205,-206,]),'LAMBDA_TOKEN':([390,450,],[451,487,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Goal':([0,],[1,]),'CompilationUnit':([0,],[2,]),'PackageDeclaration':([0,],[3,]),'ImportDeclarations':([0,3,],[4,19,]),'TypeDeclarations':([0,3,4,19,],[5,20,21,32,]),'ImportDeclaration':([0,3,4,19,],[8,8,22,22,]),'TypeDeclaration':([0,3,4,5,19,20,21,32,],[9,9,9,23,9,23,23,23,]),'SingleTypeImportDeclaration':([0,3,4,19,],[10,10,10,10,]),'TypeImportOnDemandDeclaration':([0,3,4,19,],[11,11,11,11,]),'ClassDeclaration':([0,3,4,5,19,20,21,32,],[12,12,12,12,12,12,12,12,]),'Modifiers':([0,3,4,5,19,20,21,32,41,50,],[14,14,14,14,14,14,14,14,57,57,]),'Modifier':([0,3,4,5,14,19,20,21,32,41,50,57,],[16,16,16,16,30,16,16,16,16,16,16,30,]),'Name':([6,13,40,41,50,57,89,90,92,101,115,116,119,149,152,153,164,165,168,180,186,187,201,202,206,207,225,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,298,309,310,311,312,313,314,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,426,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[24,28,48,72,72,72,48,162,162,72,162,162,216,255,216,216,277,277,48,162,72,216,48,162,216,307,48,277,277,277,277,216,255,216,216,349,216,216,216,216,307,216,216,72,216,277,72,277,216,277,277,277,277,277,277,277,277,277,72,277,277,277,277,277,277,277,216,216,216,216,277,277,216,216,255,255,216,255,255,216,72,277,216,216,216,277,277,277,255,255,255,216,255,255,216,349,255,255,255,255,162,216,216,255,255,255,162,162,255,255,216,255,255,255,255,255,255,255,255,255,255,255,255,255,255,]),'SimpleName':([6,13,40,41,50,57,89,90,92,101,115,116,119,149,152,153,164,165,168,180,186,187,201,202,206,207,225,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,298,309,310,311,312,313,314,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,426,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[25,25,25,62,62,62,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'QualifiedName':([6,13,40,41,50,57,89,90,92,101,115,116,119,149,152,153,164,165,168,180,186,187,201,202,206,207,225,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,298,309,310,311,312,313,314,317,318,320,321,322,323,324,325,326,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,426,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'Super':([31,37,],[38,44,]),'ClassBody':([31,37,38,44,],[39,45,46,81,]),'ClassType':([40,41,50,57,89,90,92,101,115,116,168,180,186,201,202,225,251,298,311,326,426,494,504,526,531,],[47,69,69,69,114,69,69,69,69,69,285,69,69,300,69,319,69,69,69,69,69,69,69,69,69,]),'ClassBodyDeclarations':([41,],[50,]),'ClassBodyDeclaration':([41,50,],[51,83,]),'ClassMemberDeclaration':([41,50,],[52,52,]),'ConstructorDeclaration':([41,50,],[53,53,]),'StaticInitializer':([41,50,],[54,54,]),'FieldDeclaration':([41,50,],[55,55,]),'MethodDeclaration':([41,50,],[56,56,]),'ConstructorDeclarator':([41,50,57,],[58,58,84,]),'Type':([41,50,57,90,92,101,115,116,180,186,202,251,298,311,426,494,504,526,531,],[60,60,85,132,132,192,132,132,132,192,132,132,192,192,192,132,132,132,132,]),'MethodHeader':([41,50,],[61,61,]),'PrimitiveType':([41,50,57,90,92,101,115,116,168,180,186,202,207,225,251,278,298,311,326,426,494,504,526,531,],[63,63,63,63,63,63,63,63,286,63,63,63,306,286,63,306,63,63,404,63,63,63,63,63,]),'ReferenceType':([41,50,57,90,92,101,115,116,180,186,202,251,298,311,326,426,494,504,526,531,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,403,64,64,64,64,64,]),'NumericType':([41,50,57,90,92,101,115,116,168,180,186,202,207,225,251,278,298,311,326,426,494,504,526,531,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'ArrayType':([41,50,57,90,92,101,115,116,180,186,202,251,298,311,326,426,494,504,526,531,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'IntegralType':([41,50,57,90,92,101,115,116,168,180,186,202,207,225,251,278,298,311,326,426,494,504,526,531,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'FloatingPointType':([41,50,57,90,92,101,115,116,168,180,186,202,207,225,251,278,298,311,326,426,494,504,526,531,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'Throws':([58,84,94,103,110,111,],[87,107,185,194,199,200,]),'ConstructorBody':([58,84,87,107,],[88,108,112,197,]),'Block':([59,61,90,92,115,116,149,154,180,202,248,359,415,416,451,470,487,491,492,496,498,501,504,510,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[91,99,133,133,133,133,133,263,133,133,133,425,133,133,488,133,512,133,133,133,133,133,133,536,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'VariableDeclarators':([60,85,132,],[93,109,246,]),'MethodDeclarator':([60,65,85,86,],[94,103,110,111,]),'VariableDeclarator':([60,85,132,184,],[95,95,95,289,]),'VariableDeclaratorId':([60,85,132,184,192,],[97,97,97,97,299,]),'MethodBody':([61,],[98,]),'ClassTypeList':([89,],[113,]),'ExplicitConstructorInvocation':([90,],[115,]),'BlockStatements':([90,92,115,504,526,],[116,180,202,531,531,]),'BlockStatement':([90,92,115,116,180,202,504,526,531,],[122,122,122,205,205,205,122,122,205,]),'LocalVariableDeclarationStatement':([90,92,115,116,180,202,504,526,531,],[123,123,123,123,123,123,123,123,123,]),'Statement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[124,124,124,124,254,124,124,341,456,466,499,514,341,520,523,525,124,542,544,545,124,124,456,466,555,499,514,520,523,525,542,544,545,555,]),'LocalVariableDeclaration':([90,92,115,116,180,202,251,494,504,526,531,],[125,125,125,125,125,125,347,347,125,125,125,]),'StatementWithoutTrailingSubstatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[126,126,126,126,126,126,126,126,458,126,126,126,458,126,126,126,126,126,126,126,126,126,458,458,126,458,458,458,458,458,458,458,458,458,]),'LabeledStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'IfThenStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'IfThenElseStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'WhileStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'ForStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'EmptyStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'ExpressionStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'SwitchStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,]),'DoStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'BreakStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'ContinueStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'ReturnStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'ThrowStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'TryStatement':([90,92,115,116,149,180,202,248,415,416,470,491,492,496,498,501,504,519,522,524,526,531,537,538,543,553,556,558,560,563,565,568,570,573,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'StatementExpression':([90,92,115,116,149,180,202,248,251,415,416,418,420,467,470,472,491,492,494,496,497,498,501,504,519,522,524,526,531,537,538,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[147,147,147,147,147,147,147,147,348,147,147,348,473,348,147,348,147,147,348,147,348,147,147,147,147,147,147,147,147,147,147,348,147,348,147,348,147,147,348,147,147,147,147,147,147,]),'Assignment':([90,92,115,116,119,149,152,153,180,187,202,206,207,243,248,249,250,251,253,264,265,266,278,287,295,309,313,345,367,370,379,386,414,415,416,417,418,420,422,430,435,440,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[155,155,155,155,211,155,211,211,155,211,155,211,211,211,155,211,211,155,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,155,155,211,155,155,211,211,211,211,155,155,155,211,155,155,211,155,155,155,155,155,155,211,211,155,155,155,155,155,155,155,211,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'PreIncrementExpression':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,383,386,414,415,416,417,418,420,422,430,435,440,444,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[156,156,156,156,234,156,234,234,234,234,156,234,156,234,234,234,234,234,234,234,156,234,234,156,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,156,156,234,156,156,234,234,234,234,234,234,156,156,156,234,156,156,234,156,156,156,156,156,156,234,234,156,156,156,156,156,156,156,234,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'PreDecrementExpression':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,383,386,414,415,416,417,418,420,422,430,435,440,444,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[157,157,157,157,235,157,235,235,235,235,157,235,157,235,235,235,235,235,235,235,157,235,235,157,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,157,157,235,157,157,235,235,235,235,235,235,157,157,157,235,157,157,235,157,157,157,157,157,157,235,235,157,157,157,157,157,157,157,235,157,157,157,157,157,157,157,157,157,157,157,157,157,157,]),'PostIncrementExpression':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[158,158,158,158,241,158,241,241,241,241,158,241,158,241,241,241,241,241,241,241,158,241,241,158,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,158,158,241,158,158,241,241,241,241,241,241,241,241,158,158,158,241,158,158,241,158,158,158,158,158,158,241,241,158,158,158,158,158,158,158,241,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'PostDecrementExpression':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[159,159,159,159,242,159,242,242,242,242,159,242,159,242,242,242,242,242,242,242,159,242,242,159,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,159,159,242,159,159,242,242,242,242,242,242,242,242,159,159,159,242,159,159,242,159,159,159,159,159,159,242,242,159,159,159,159,159,159,159,242,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'MethodInvocation':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[160,160,160,160,223,160,223,223,223,223,160,223,160,223,223,223,223,223,223,223,160,223,223,160,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,160,160,223,160,160,223,223,223,223,223,223,223,223,160,160,160,223,160,160,223,160,160,160,160,160,160,223,223,160,160,160,160,160,160,160,223,160,160,160,160,160,160,160,160,160,160,160,160,160,160,]),'ClassInstanceCreationExpression':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[161,161,161,161,222,161,222,222,222,222,161,222,161,222,222,222,222,222,222,222,161,222,222,161,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,161,161,222,161,161,222,222,222,222,222,222,222,222,161,161,161,222,161,161,222,161,161,161,161,161,161,222,222,161,161,161,161,161,161,161,222,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'LeftHandSide':([90,92,115,116,119,149,152,153,180,187,202,206,207,243,248,249,250,251,253,264,265,266,278,287,295,309,313,345,367,370,379,386,414,415,416,417,418,420,422,430,435,440,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'PostfixExpression':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[166,166,166,166,237,166,237,237,237,237,166,237,166,237,237,237,237,237,237,237,166,237,237,166,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,166,166,237,166,166,237,237,237,237,237,237,237,237,166,166,166,237,166,166,237,166,166,166,166,166,166,237,237,166,166,166,166,166,166,166,237,166,166,166,166,166,166,166,166,166,166,166,166,166,166,]),'Primary':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[167,167,167,167,218,167,218,218,276,276,167,218,167,218,218,276,276,276,276,218,167,218,218,167,218,218,218,218,218,218,218,218,276,276,218,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,218,218,218,218,276,276,218,218,167,167,218,167,167,218,276,218,218,218,276,276,276,167,167,167,218,167,167,218,167,167,167,167,167,167,218,218,167,167,167,167,167,167,167,218,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'FieldAccess':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[169,169,169,169,169,169,169,169,279,279,169,169,169,169,169,279,279,279,279,169,169,169,169,169,169,169,169,169,169,169,169,169,279,279,169,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,169,169,169,169,279,279,169,169,169,169,169,169,169,169,279,169,169,169,279,279,279,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,]),'ArrayAccess':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[170,170,170,170,170,170,170,170,280,280,170,170,170,170,170,280,280,280,280,170,170,170,170,170,170,170,170,170,170,170,170,170,280,280,170,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,170,170,170,170,280,280,170,170,170,170,170,170,170,170,280,170,170,170,280,280,280,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,]),'PrimaryNoNewArray':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[171,171,171,171,220,171,220,220,171,171,171,220,171,220,220,171,171,171,171,220,171,220,220,171,220,220,220,220,220,220,220,220,171,171,220,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,220,220,220,220,171,171,220,220,171,171,220,171,171,220,171,220,220,220,171,171,171,171,171,171,220,171,171,220,171,171,171,171,171,171,220,220,171,171,171,171,171,171,171,220,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'ArrayCreationExpression':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'Literal':([90,92,115,116,119,149,152,153,164,165,180,187,202,206,207,231,232,238,239,243,248,249,250,251,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,415,416,417,418,420,422,429,430,435,440,444,448,449,467,470,472,490,491,492,493,494,496,497,498,501,504,507,518,519,522,524,526,531,537,538,539,540,543,550,553,554,556,558,559,560,563,565,568,570,573,],[173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,]),'FormalParameterList':([101,186,311,],[189,291,389,]),'FormalParameter':([101,186,298,311,426,],[191,191,377,191,477,]),'Expression':([119,152,153,187,206,207,243,249,250,253,264,265,278,287,295,309,313,345,367,370,379,386,414,417,422,430,435,440,490,493,507,518,539,],[208,260,262,293,304,305,304,342,343,350,361,304,365,372,293,387,361,419,304,436,442,361,304,468,476,304,436,293,513,516,533,541,551,]),'AssignmentExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,313,345,367,370,379,386,414,417,422,430,435,440,490,493,507,518,539,],[209,209,209,209,209,209,209,209,209,209,209,209,364,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,]),'ConditionalExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,313,345,367,370,379,386,414,417,422,430,435,440,449,490,493,507,518,539,],[210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,486,210,210,210,210,210,]),'LambdaExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,313,345,367,370,379,386,414,417,422,430,435,440,490,493,507,518,539,],[212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,]),'ConditionalOrExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,313,345,367,370,379,386,414,417,422,430,435,440,449,490,493,507,518,539,],[213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,]),'ConditionalAndExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,310,313,345,367,370,379,386,414,417,422,430,435,440,449,490,493,507,518,539,],[215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,388,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,]),'InclusiveOrExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,310,312,313,345,367,370,379,386,414,417,422,430,435,440,449,490,493,507,518,539,],[217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,391,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,]),'ExclusiveOrExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,310,312,313,314,345,367,370,379,386,414,417,422,430,435,440,449,490,493,507,518,539,],[221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,392,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,]),'AndExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,310,312,313,314,317,345,367,370,379,386,414,417,422,430,435,440,449,490,493,507,518,539,],[224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,395,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,]),'EqualityExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,310,312,313,314,317,318,345,367,370,379,386,414,417,422,430,435,440,449,490,493,507,518,539,],[226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,396,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,]),'RelationalExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,345,367,370,379,386,414,417,422,430,435,440,449,490,493,507,518,539,],[227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,397,398,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,]),'ShiftExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,345,367,370,379,386,414,417,422,430,435,440,449,490,493,507,518,539,],[228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,399,400,401,402,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,]),'AdditiveExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,345,367,370,379,386,414,417,422,430,435,440,449,490,493,507,518,539,],[229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,405,406,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,]),'MultiplicativeExpression':([119,152,153,187,206,207,243,249,250,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,345,367,370,379,386,414,417,422,430,435,440,449,490,493,507,518,539,],[230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,407,408,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,]),'UnaryExpression':([119,152,153,164,165,187,206,207,231,232,238,239,243,249,250,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,383,386,414,417,422,430,435,440,444,449,490,493,507,518,539,],[233,233,233,275,281,233,233,233,334,335,336,337,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,409,410,411,233,233,233,233,446,233,233,233,233,233,233,233,483,233,233,233,233,233,233,]),'UnaryExpressionNotPlusMinus':([119,152,153,164,165,187,206,207,231,232,238,239,243,249,250,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,417,422,429,430,435,440,444,448,449,490,493,507,518,539,],[236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,443,236,236,236,236,236,443,236,236,236,236,485,236,236,236,236,236,236,]),'CastExpression':([119,152,153,164,165,187,206,207,231,232,238,239,243,249,250,253,264,265,266,278,287,295,309,310,312,313,314,317,318,320,321,322,323,324,325,327,328,329,330,331,332,333,345,367,370,379,381,383,386,414,417,422,429,430,435,440,444,448,449,490,493,507,518,539,],[240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,]),'AssignmentOperator':([163,],[266,]),'VariableInitializer':([187,295,440,],[292,376,482,]),'ArrayInitializer':([187,295,440,],[294,294,294,]),'ArgumentList':([206,243,265,367,414,430,],[302,338,362,432,453,478,]),'ForInit':([251,494,],[344,517,]),'StatementExpressionList':([251,418,467,472,494,497,540,550,554,559,],[346,471,471,471,346,471,471,471,471,471,]),'Catches':([263,],[356,]),'Finally':([263,356,],[357,423,]),'CatchClause':([263,356,],[358,424,]),'DimExprs':([285,286,319,],[368,371,368,]),'DimExpr':([285,286,319,368,371,],[369,369,369,434,434,]),'VariableInitializers':([295,],[374,]),'Dims':([306,307,368,371,],[382,385,433,437,]),'StatementNoShortIf':([415,492,537,538,553,556,558,560,563,565,568,570,573,],[457,515,548,549,561,564,566,569,571,572,574,575,576,]),'LabeledStatementNoShortIf':([415,492,537,538,553,556,558,560,563,565,568,570,573,],[459,459,459,459,459,459,459,459,459,459,459,459,459,]),'IfThenElseStatementNoShortIf':([415,492,537,538,553,556,558,560,563,565,568,570,573,],[460,460,460,460,460,460,460,460,460,460,460,460,460,]),'WhileStatementNoShortIf':([415,492,537,538,553,556,558,560,563,565,568,570,573,],[461,461,461,461,461,461,461,461,461,461,461,461,461,]),'ForStatementNoShortIf':([415,492,537,538,553,556,558,560,563,565,568,570,573,],[462,462,462,462,462,462,462,462,462,462,462,462,462,]),'ForUpdate':([418,467,472,497,540,550,554,559,],[469,495,500,521,552,557,562,567,]),'SwitchBlock':([421,],[474,]),'SwitchBlockStatementGroups':([475,],[503,]),'SwitchLabels':([475,503,],[504,526,]),'SwitchBlockStatementGroup':([475,503,],[505,528,]),'SwitchLabel':([475,503,504,526,],[506,506,530,530,]),'ConstantExpression':([507,],[532,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Goal","S'",1,None,None,None),
  ('Goal -> CompilationUnit','Goal',1,'p_Goal','parser',12),
  ('Literal -> INT_CONSTANT','Literal',1,'p_Literal','parser',18),
  ('Literal -> FLOAT_CONSTANT','Literal',1,'p_Literal','parser',19),
  ('Literal -> CHAR_CONSTANT','Literal',1,'p_Literal','parser',20),
  ('Literal -> STR_CONSTANT','Literal',1,'p_Literal','parser',21),
  ('Literal -> NULL','Literal',1,'p_Literal','parser',22),
  ('Type -> PrimitiveType','Type',1,'p_Type','parser',31),
  ('Type -> ReferenceType','Type',1,'p_Type','parser',32),
  ('PrimitiveType -> NumericType','PrimitiveType',1,'p_PrimitiveType','parser',37),
  ('PrimitiveType -> BOOLEAN','PrimitiveType',1,'p_PrimitiveType','parser',38),
  ('NumericType -> IntegralType','NumericType',1,'p_NumericType','parser',43),
  ('NumericType -> FloatingPointType','NumericType',1,'p_NumericType','parser',44),
  ('IntegralType -> BYTE','IntegralType',1,'p_IntegralType','parser',49),
  ('IntegralType -> SHORT','IntegralType',1,'p_IntegralType','parser',50),
  ('IntegralType -> INT','IntegralType',1,'p_IntegralType','parser',51),
  ('IntegralType -> LONG','IntegralType',1,'p_IntegralType','parser',52),
  ('IntegralType -> CHAR','IntegralType',1,'p_IntegralType','parser',53),
  ('FloatingPointType -> FLOAT','FloatingPointType',1,'p_FloatingPointType','parser',58),
  ('FloatingPointType -> DOUBLE','FloatingPointType',1,'p_FloatingPointType','parser',59),
  ('ReferenceType -> ArrayType','ReferenceType',1,'p_ReferenceType','parser',64),
  ('ReferenceType -> ClassType','ReferenceType',1,'p_ReferenceType','parser',65),
  ('ClassType -> Name','ClassType',1,'p_ClassType','parser',71),
  ('ArrayType -> PrimitiveType L_SQBR R_SQBR','ArrayType',3,'p_ArrayType','parser',76),
  ('ArrayType -> Name L_SQBR R_SQBR','ArrayType',3,'p_ArrayType','parser',77),
  ('ArrayType -> ArrayType L_SQBR R_SQBR','ArrayType',3,'p_ArrayType','parser',78),
  ('Name -> SimpleName','Name',1,'p_Name','parser',85),
  ('Name -> QualifiedName','Name',1,'p_Name','parser',86),
  ('SimpleName -> IDENTIFIER','SimpleName',1,'p_SimpleName','parser',90),
  ('QualifiedName -> Name DOT IDENTIFIER','QualifiedName',3,'p_QualifiedName','parser',94),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations TypeDeclarations','CompilationUnit',3,'p_CompilationUnit','parser',103),
  ('CompilationUnit -> PackageDeclaration ImportDeclarations','CompilationUnit',2,'p_CompilationUnit','parser',104),
  ('CompilationUnit -> PackageDeclaration TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','parser',105),
  ('CompilationUnit -> ImportDeclarations TypeDeclarations','CompilationUnit',2,'p_CompilationUnit','parser',106),
  ('CompilationUnit -> PackageDeclaration','CompilationUnit',1,'p_CompilationUnit','parser',107),
  ('CompilationUnit -> ImportDeclarations','CompilationUnit',1,'p_CompilationUnit','parser',108),
  ('CompilationUnit -> TypeDeclarations','CompilationUnit',1,'p_CompilationUnit','parser',109),
  ('CompilationUnit -> <empty>','CompilationUnit',0,'p_CompilationUnit','parser',110),
  ('ImportDeclarations -> ImportDeclaration','ImportDeclarations',1,'p_ImportDeclarations','parser',116),
  ('ImportDeclarations -> ImportDeclarations ImportDeclaration','ImportDeclarations',2,'p_ImportDeclarations','parser',117),
  ('TypeDeclarations -> TypeDeclaration','TypeDeclarations',1,'p_TypeDeclarations','parser',123),
  ('TypeDeclarations -> TypeDeclarations TypeDeclaration','TypeDeclarations',2,'p_TypeDeclarations','parser',124),
  ('PackageDeclaration -> PACKAGE Name STMT_TERMINATOR','PackageDeclaration',3,'p_PackageDeclaration','parser',130),
  ('ImportDeclaration -> SingleTypeImportDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser',136),
  ('ImportDeclaration -> TypeImportOnDemandDeclaration','ImportDeclaration',1,'p_ImportDeclaration','parser',137),
  ('SingleTypeImportDeclaration -> IMPORT Name STMT_TERMINATOR','SingleTypeImportDeclaration',3,'p_SingleTypeImportDeclaration','parser',143),
  ('TypeImportOnDemandDeclaration -> IMPORT Name DOT MULT STMT_TERMINATOR','TypeImportOnDemandDeclaration',5,'p_TypeImportOnDemandDeclaration','parser',149),
  ('TypeDeclaration -> ClassDeclaration','TypeDeclaration',1,'p_TypeDeclaration','parser',155),
  ('TypeDeclaration -> STMT_TERMINATOR','TypeDeclaration',1,'p_TypeDeclaration','parser',156),
  ('Modifiers -> Modifier','Modifiers',1,'p_Modifiers','parser',162),
  ('Modifiers -> Modifiers Modifier','Modifiers',2,'p_Modifiers','parser',163),
  ('Modifier -> STATIC','Modifier',1,'p_Modifier','parser',169),
  ('Modifier -> FINAL','Modifier',1,'p_Modifier','parser',170),
  ('ClassDeclaration -> Modifiers CLASS IDENTIFIER Super ClassBody','ClassDeclaration',5,'p_ClassDeclaration','parser',177),
  ('ClassDeclaration -> Modifiers CLASS IDENTIFIER ClassBody','ClassDeclaration',4,'p_ClassDeclaration','parser',178),
  ('ClassDeclaration -> CLASS IDENTIFIER Super ClassBody','ClassDeclaration',4,'p_ClassDeclaration','parser',179),
  ('ClassDeclaration -> CLASS IDENTIFIER ClassBody','ClassDeclaration',3,'p_ClassDeclaration','parser',180),
  ('Super -> EXTENDS ClassType','Super',2,'p_Super','parser',186),
  ('ClassBody -> BLOCK_OPENER BLOCK_CLOSER','ClassBody',2,'p_ClassBody','parser',192),
  ('ClassBody -> BLOCK_OPENER ClassBodyDeclarations BLOCK_CLOSER','ClassBody',3,'p_ClassBody','parser',193),
  ('ClassBodyDeclarations -> ClassBodyDeclaration','ClassBodyDeclarations',1,'p_ClassBodyDeclarations','parser',199),
  ('ClassBodyDeclarations -> ClassBodyDeclarations ClassBodyDeclaration','ClassBodyDeclarations',2,'p_ClassBodyDeclarations','parser',200),
  ('ClassBodyDeclaration -> ClassMemberDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser',206),
  ('ClassBodyDeclaration -> ConstructorDeclaration','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser',207),
  ('ClassBodyDeclaration -> StaticInitializer','ClassBodyDeclaration',1,'p_ClassBodyDeclaration','parser',208),
  ('ClassMemberDeclaration -> FieldDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser',214),
  ('ClassMemberDeclaration -> MethodDeclaration','ClassMemberDeclaration',1,'p_ClassMemberDeclaration','parser',215),
  ('FieldDeclaration -> Modifiers Type VariableDeclarators STMT_TERMINATOR','FieldDeclaration',4,'p_FieldDeclaration','parser',221),
  ('FieldDeclaration -> Type VariableDeclarators STMT_TERMINATOR','FieldDeclaration',3,'p_FieldDeclaration','parser',222),
  ('VariableDeclarators -> VariableDeclarator','VariableDeclarators',1,'p_VariableDeclarators','parser',228),
  ('VariableDeclarators -> VariableDeclarators COMMA VariableDeclarator','VariableDeclarators',3,'p_VariableDeclarators','parser',229),
  ('VariableDeclarator -> VariableDeclaratorId','VariableDeclarator',1,'p_VariableDeclarator','parser',235),
  ('VariableDeclarator -> VariableDeclaratorId ASSIGN VariableInitializer','VariableDeclarator',3,'p_VariableDeclarator','parser',236),
  ('VariableDeclaratorId -> IDENTIFIER','VariableDeclaratorId',1,'p_VariableDeclaratorId','parser',242),
  ('VariableDeclaratorId -> VariableDeclaratorId L_SQBR R_SQBR','VariableDeclaratorId',3,'p_VariableDeclaratorId','parser',243),
  ('VariableInitializer -> Expression','VariableInitializer',1,'p_VariableInitializer','parser',249),
  ('VariableInitializer -> ArrayInitializer','VariableInitializer',1,'p_VariableInitializer','parser',250),
  ('MethodDeclaration -> MethodHeader MethodBody','MethodDeclaration',2,'p_MethodDeclaration','parser',256),
  ('MethodHeader -> Modifiers Type MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser',262),
  ('MethodHeader -> Modifiers Type MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser',263),
  ('MethodHeader -> Type MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser',264),
  ('MethodHeader -> Type MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser',265),
  ('MethodHeader -> Modifiers VOID MethodDeclarator Throws','MethodHeader',4,'p_MethodHeader','parser',266),
  ('MethodHeader -> Modifiers VOID MethodDeclarator','MethodHeader',3,'p_MethodHeader','parser',267),
  ('MethodHeader -> VOID MethodDeclarator Throws','MethodHeader',3,'p_MethodHeader','parser',268),
  ('MethodHeader -> VOID MethodDeclarator','MethodHeader',2,'p_MethodHeader','parser',269),
  ('MethodDeclarator -> IDENTIFIER L_PAREN R_PAREN','MethodDeclarator',3,'p_MethodDeclarator','parser',275),
  ('MethodDeclarator -> IDENTIFIER L_PAREN FormalParameterList R_PAREN','MethodDeclarator',4,'p_MethodDeclarator','parser',276),
  ('FormalParameterList -> FormalParameter','FormalParameterList',1,'p_FormalParametersList','parser',282),
  ('FormalParameterList -> FormalParameterList COMMA FormalParameter','FormalParameterList',3,'p_FormalParametersList','parser',283),
  ('FormalParameter -> Type VariableDeclaratorId','FormalParameter',2,'p_FormalParameter','parser',289),
  ('Throws -> THROWS ClassTypeList','Throws',2,'p_Throws','parser',295),
  ('ClassTypeList -> ClassType','ClassTypeList',1,'p_ClassTypeList','parser',301),
  ('ClassTypeList -> ClassTypeList COMMA ClassType','ClassTypeList',3,'p_ClassTypeList','parser',302),
  ('MethodBody -> Block','MethodBody',1,'p_MethodBody','parser',308),
  ('MethodBody -> STMT_TERMINATOR','MethodBody',1,'p_MethodBody','parser',309),
  ('StaticInitializer -> STATIC Block','StaticInitializer',2,'p_StaticInitializer','parser',315),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',4,'p_ConstructorDeclaration','parser',321),
  ('ConstructorDeclaration -> Modifiers ConstructorDeclarator ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','parser',322),
  ('ConstructorDeclaration -> ConstructorDeclarator Throws ConstructorBody','ConstructorDeclaration',3,'p_ConstructorDeclaration','parser',323),
  ('ConstructorDeclaration -> ConstructorDeclarator ConstructorBody','ConstructorDeclaration',2,'p_ConstructorDeclaration','parser',324),
  ('ConstructorDeclarator -> SimpleName L_PAREN FormalParameterList R_PAREN','ConstructorDeclarator',4,'p_ConstructorDeclarator','parser',330),
  ('ConstructorDeclarator -> SimpleName L_PAREN R_PAREN','ConstructorDeclarator',3,'p_ConstructorDeclarator','parser',331),
  ('ConstructorBody -> BLOCK_OPENER ExplicitConstructorInvocation BlockStatements BLOCK_CLOSER','ConstructorBody',4,'p_ConstructorBody','parser',337),
  ('ConstructorBody -> BLOCK_OPENER ExplicitConstructorInvocation BLOCK_CLOSER','ConstructorBody',3,'p_ConstructorBody','parser',338),
  ('ConstructorBody -> BLOCK_OPENER BlockStatements BLOCK_CLOSER','ConstructorBody',3,'p_ConstructorBody','parser',339),
  ('ConstructorBody -> BLOCK_OPENER BLOCK_CLOSER','ConstructorBody',2,'p_ConstructorBody','parser',340),
  ('ExplicitConstructorInvocation -> THIS L_PAREN ArgumentList R_PAREN STMT_TERMINATOR','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser',346),
  ('ExplicitConstructorInvocation -> THIS L_PAREN R_PAREN STMT_TERMINATOR','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','parser',347),
  ('ExplicitConstructorInvocation -> SUPER L_PAREN ArgumentList R_PAREN STMT_TERMINATOR','ExplicitConstructorInvocation',5,'p_ExplicitConstructorInvocation','parser',348),
  ('ExplicitConstructorInvocation -> SUPER L_PAREN R_PAREN STMT_TERMINATOR','ExplicitConstructorInvocation',4,'p_ExplicitConstructorInvocation','parser',349),
  ('ArrayInitializer -> BLOCK_OPENER VariableInitializers BLOCK_CLOSER','ArrayInitializer',3,'p_ArrayInitializer','parser',358),
  ('ArrayInitializer -> BLOCK_OPENER BLOCK_CLOSER','ArrayInitializer',2,'p_ArrayInitializer','parser',359),
  ('VariableInitializers -> VariableInitializer','VariableInitializers',1,'p_VariableInitializers','parser',365),
  ('VariableInitializers -> VariableInitializers COMMA VariableInitializer','VariableInitializers',3,'p_VariableInitializers','parser',366),
  ('Block -> BLOCK_OPENER BLOCK_CLOSER','Block',2,'p_Block','parser',373),
  ('Block -> BLOCK_OPENER BlockStatements BLOCK_CLOSER','Block',3,'p_Block','parser',374),
  ('BlockStatements -> BlockStatement','BlockStatements',1,'p_BlockStatements','parser',380),
  ('BlockStatements -> BlockStatements BlockStatement','BlockStatements',2,'p_BlockStatements','parser',381),
  ('BlockStatement -> LocalVariableDeclarationStatement','BlockStatement',1,'p_BlockStatement','parser',387),
  ('BlockStatement -> Statement','BlockStatement',1,'p_BlockStatement','parser',388),
  ('LocalVariableDeclarationStatement -> LocalVariableDeclaration STMT_TERMINATOR','LocalVariableDeclarationStatement',2,'p_LocalVariableDeclarationStatement','parser',394),
  ('LocalVariableDeclaration -> Type VariableDeclarators','LocalVariableDeclaration',2,'p_LocalVariableDeclaration','parser',400),
  ('Statement -> StatementWithoutTrailingSubstatement','Statement',1,'p_Statement','parser',406),
  ('Statement -> LabeledStatement','Statement',1,'p_Statement','parser',407),
  ('Statement -> IfThenStatement','Statement',1,'p_Statement','parser',408),
  ('Statement -> IfThenElseStatement','Statement',1,'p_Statement','parser',409),
  ('Statement -> WhileStatement','Statement',1,'p_Statement','parser',410),
  ('Statement -> ForStatement','Statement',1,'p_Statement','parser',411),
  ('StatementNoShortIf -> StatementWithoutTrailingSubstatement','StatementNoShortIf',1,'p_StatementNoShortIf','parser',417),
  ('StatementNoShortIf -> LabeledStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser',418),
  ('StatementNoShortIf -> IfThenElseStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser',419),
  ('StatementNoShortIf -> WhileStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser',420),
  ('StatementNoShortIf -> ForStatementNoShortIf','StatementNoShortIf',1,'p_StatementNoShortIf','parser',421),
  ('StatementWithoutTrailingSubstatement -> Block','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser',427),
  ('StatementWithoutTrailingSubstatement -> EmptyStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser',428),
  ('StatementWithoutTrailingSubstatement -> ExpressionStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser',429),
  ('StatementWithoutTrailingSubstatement -> SwitchStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser',430),
  ('StatementWithoutTrailingSubstatement -> DoStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser',431),
  ('StatementWithoutTrailingSubstatement -> BreakStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser',432),
  ('StatementWithoutTrailingSubstatement -> ContinueStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser',433),
  ('StatementWithoutTrailingSubstatement -> ReturnStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser',434),
  ('StatementWithoutTrailingSubstatement -> ThrowStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser',435),
  ('StatementWithoutTrailingSubstatement -> TryStatement','StatementWithoutTrailingSubstatement',1,'p_StatementWithoutTrailingSubstatement','parser',436),
  ('EmptyStatement -> STMT_TERMINATOR','EmptyStatement',1,'p_EmptyStatement','parser',442),
  ('LabeledStatement -> IDENTIFIER COLON Statement','LabeledStatement',3,'p_LabeledStatement','parser',448),
  ('LabeledStatementNoShortIf -> IDENTIFIER COLON StatementNoShortIf','LabeledStatementNoShortIf',3,'p_LabeledStatementNoShortIf','parser',454),
  ('ExpressionStatement -> StatementExpression STMT_TERMINATOR','ExpressionStatement',2,'p_ExpressionStatement','parser',460),
  ('StatementExpression -> Assignment','StatementExpression',1,'p_StatementExpression','parser',466),
  ('StatementExpression -> PreIncrementExpression','StatementExpression',1,'p_StatementExpression','parser',467),
  ('StatementExpression -> PreDecrementExpression','StatementExpression',1,'p_StatementExpression','parser',468),
  ('StatementExpression -> PostIncrementExpression','StatementExpression',1,'p_StatementExpression','parser',469),
  ('StatementExpression -> PostDecrementExpression','StatementExpression',1,'p_StatementExpression','parser',470),
  ('StatementExpression -> MethodInvocation','StatementExpression',1,'p_StatementExpression','parser',471),
  ('StatementExpression -> ClassInstanceCreationExpression','StatementExpression',1,'p_StatementExpression','parser',472),
  ('IfThenStatement -> IF L_PAREN Expression R_PAREN Statement','IfThenStatement',5,'p_IfThenStatement','parser',478),
  ('IfThenElseStatement -> IF L_PAREN Expression R_PAREN StatementNoShortIf ELSE Statement','IfThenElseStatement',7,'p_IfThenElseStatement','parser',484),
  ('IfThenElseStatementNoShortIf -> IF L_PAREN Expression R_PAREN StatementNoShortIf ELSE StatementNoShortIf','IfThenElseStatementNoShortIf',7,'p_IfThenElseStatementNoShortIf','parser',490),
  ('SwitchStatement -> SWITCH L_PAREN Expression R_PAREN SwitchBlock','SwitchStatement',5,'p_SwitchStatement','parser',496),
  ('SwitchBlock -> BLOCK_OPENER BLOCK_CLOSER','SwitchBlock',2,'p_SwitchBlock','parser',502),
  ('SwitchBlock -> BLOCK_OPENER SwitchBlockStatementGroups SwitchLabels BLOCK_CLOSER','SwitchBlock',4,'p_SwitchBlock','parser',503),
  ('SwitchBlock -> BLOCK_OPENER SwitchBlockStatementGroups BLOCK_CLOSER','SwitchBlock',3,'p_SwitchBlock','parser',504),
  ('SwitchBlock -> BLOCK_OPENER SwitchLabels BLOCK_CLOSER','SwitchBlock',3,'p_SwitchBlock','parser',505),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroup','SwitchBlockStatementGroups',1,'p_SwitchBlockStatementGroups','parser',511),
  ('SwitchBlockStatementGroups -> SwitchBlockStatementGroups SwitchBlockStatementGroup','SwitchBlockStatementGroups',2,'p_SwitchBlockStatementGroups','parser',512),
  ('SwitchBlockStatementGroup -> SwitchLabels BlockStatements','SwitchBlockStatementGroup',2,'p_SwitchBlockStatementGroup','parser',518),
  ('SwitchLabels -> SwitchLabel','SwitchLabels',1,'p_SwitchLabels','parser',524),
  ('SwitchLabels -> SwitchLabels SwitchLabel','SwitchLabels',2,'p_SwitchLabels','parser',525),
  ('SwitchLabel -> CASE ConstantExpression COLON','SwitchLabel',3,'p_SwitchLabel','parser',531),
  ('SwitchLabel -> DEFAULT COLON','SwitchLabel',2,'p_SwitchLabel','parser',532),
  ('WhileStatement -> WHILE L_PAREN Expression R_PAREN Statement','WhileStatement',5,'p_WhileStatement','parser',538),
  ('WhileStatementNoShortIf -> WHILE L_PAREN Expression R_PAREN StatementNoShortIf','WhileStatementNoShortIf',5,'p_WhileStatementNoShortIf','parser',544),
  ('DoStatement -> DO Statement WHILE L_PAREN Expression R_PAREN STMT_TERMINATOR','DoStatement',7,'p_DoStatement','parser',550),
  ('ForStatement -> FOR L_PAREN ForInit STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_PAREN Statement','ForStatement',9,'p_ForStatement','parser',556),
  ('ForStatement -> FOR L_PAREN STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_PAREN Statement','ForStatement',8,'p_ForStatement','parser',557),
  ('ForStatement -> FOR L_PAREN ForInit STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_PAREN Statement','ForStatement',8,'p_ForStatement','parser',558),
  ('ForStatement -> FOR L_PAREN ForInit STMT_TERMINATOR Expression STMT_TERMINATOR R_PAREN Statement','ForStatement',8,'p_ForStatement','parser',559),
  ('ForStatement -> FOR L_PAREN ForInit STMT_TERMINATOR STMT_TERMINATOR R_PAREN Statement','ForStatement',7,'p_ForStatement','parser',560),
  ('ForStatement -> FOR L_PAREN STMT_TERMINATOR Expression STMT_TERMINATOR R_PAREN Statement','ForStatement',7,'p_ForStatement','parser',561),
  ('ForStatement -> FOR L_PAREN STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_PAREN Statement','ForStatement',7,'p_ForStatement','parser',562),
  ('ForStatement -> FOR L_PAREN STMT_TERMINATOR STMT_TERMINATOR R_PAREN Statement','ForStatement',6,'p_ForStatement','parser',563),
  ('ForStatementNoShortIf -> FOR L_PAREN ForInit STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_PAREN StatementNoShortIf','ForStatementNoShortIf',9,'p_ForStatementNoShortIf','parser',569),
  ('ForStatementNoShortIf -> FOR L_PAREN STMT_TERMINATOR Expression STMT_TERMINATOR ForUpdate R_PAREN StatementNoShortIf','ForStatementNoShortIf',8,'p_ForStatementNoShortIf','parser',570),
  ('ForStatementNoShortIf -> FOR L_PAREN ForInit STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_PAREN StatementNoShortIf','ForStatementNoShortIf',8,'p_ForStatementNoShortIf','parser',571),
  ('ForStatementNoShortIf -> FOR L_PAREN ForInit STMT_TERMINATOR Expression STMT_TERMINATOR R_PAREN StatementNoShortIf','ForStatementNoShortIf',8,'p_ForStatementNoShortIf','parser',572),
  ('ForStatementNoShortIf -> FOR L_PAREN ForInit STMT_TERMINATOR STMT_TERMINATOR R_PAREN StatementNoShortIf','ForStatementNoShortIf',7,'p_ForStatementNoShortIf','parser',573),
  ('ForStatementNoShortIf -> FOR L_PAREN STMT_TERMINATOR Expression STMT_TERMINATOR R_PAREN StatementNoShortIf','ForStatementNoShortIf',7,'p_ForStatementNoShortIf','parser',574),
  ('ForStatementNoShortIf -> FOR L_PAREN STMT_TERMINATOR STMT_TERMINATOR ForUpdate R_PAREN StatementNoShortIf','ForStatementNoShortIf',7,'p_ForStatementNoShortIf','parser',575),
  ('ForStatementNoShortIf -> FOR L_PAREN STMT_TERMINATOR STMT_TERMINATOR R_PAREN StatementNoShortIf','ForStatementNoShortIf',6,'p_ForStatementNoShortIf','parser',576),
  ('ForInit -> StatementExpressionList','ForInit',1,'p_ForInit','parser',582),
  ('ForInit -> LocalVariableDeclaration','ForInit',1,'p_ForInit','parser',583),
  ('ForUpdate -> StatementExpressionList','ForUpdate',1,'p_ForUpdate','parser',589),
  ('StatementExpressionList -> StatementExpression','StatementExpressionList',1,'p_StatementExpressionList','parser',595),
  ('StatementExpressionList -> StatementExpressionList COMMA StatementExpression','StatementExpressionList',3,'p_StatementExpressionList','parser',596),
  ('BreakStatement -> BREAK IDENTIFIER STMT_TERMINATOR','BreakStatement',3,'p_BreakStatement','parser',602),
  ('BreakStatement -> BREAK STMT_TERMINATOR','BreakStatement',2,'p_BreakStatement','parser',603),
  ('ContinueStatement -> CONTINUE IDENTIFIER STMT_TERMINATOR','ContinueStatement',3,'p_ContinueStatement','parser',609),
  ('ContinueStatement -> CONTINUE STMT_TERMINATOR','ContinueStatement',2,'p_ContinueStatement','parser',610),
  ('ReturnStatement -> RETURN Expression STMT_TERMINATOR','ReturnStatement',3,'p_ReturnStatement','parser',616),
  ('ReturnStatement -> RETURN STMT_TERMINATOR','ReturnStatement',2,'p_ReturnStatement','parser',617),
  ('ThrowStatement -> THROW Expression STMT_TERMINATOR','ThrowStatement',3,'p_ThrowStatement','parser',623),
  ('TryStatement -> TRY Block Catches','TryStatement',3,'p_TryStatement','parser',629),
  ('TryStatement -> TRY Block Catches Finally','TryStatement',4,'p_TryStatement','parser',630),
  ('TryStatement -> TRY Block Finally','TryStatement',3,'p_TryStatement','parser',631),
  ('Catches -> CatchClause','Catches',1,'p_Catches','parser',637),
  ('Catches -> Catches CatchClause','Catches',2,'p_Catches','parser',638),
  ('CatchClause -> CATCH L_PAREN FormalParameter R_PAREN Block','CatchClause',5,'p_CatchClause','parser',644),
  ('Finally -> FINALLY Block','Finally',2,'p_Finally','parser',650),
  ('Primary -> PrimaryNoNewArray','Primary',1,'p_Primary','parser',659),
  ('Primary -> ArrayCreationExpression','Primary',1,'p_Primary','parser',660),
  ('PrimaryNoNewArray -> Literal','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser',666),
  ('PrimaryNoNewArray -> THIS','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser',667),
  ('PrimaryNoNewArray -> L_PAREN Expression R_PAREN','PrimaryNoNewArray',3,'p_PrimaryNoNewArray','parser',668),
  ('PrimaryNoNewArray -> ClassInstanceCreationExpression','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser',669),
  ('PrimaryNoNewArray -> FieldAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser',670),
  ('PrimaryNoNewArray -> MethodInvocation','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser',671),
  ('PrimaryNoNewArray -> ArrayAccess','PrimaryNoNewArray',1,'p_PrimaryNoNewArray','parser',672),
  ('ClassInstanceCreationExpression -> NEW ClassType L_PAREN R_PAREN','ClassInstanceCreationExpression',4,'p_ClassInstanceCreationExpression','parser',678),
  ('ClassInstanceCreationExpression -> NEW ClassType L_PAREN ArgumentList R_PAREN','ClassInstanceCreationExpression',5,'p_ClassInstanceCreationExpression','parser',679),
  ('ArgumentList -> Expression','ArgumentList',1,'p_ArgumentList','parser',685),
  ('ArgumentList -> ArgumentList COMMA Expression','ArgumentList',3,'p_ArgumentList','parser',686),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser',692),
  ('ArrayCreationExpression -> NEW PrimitiveType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser',693),
  ('ArrayCreationExpression -> NEW ClassType DimExprs Dims','ArrayCreationExpression',4,'p_ArrayCreationExpression','parser',694),
  ('ArrayCreationExpression -> NEW ClassType DimExprs','ArrayCreationExpression',3,'p_ArrayCreationExpression','parser',695),
  ('DimExprs -> DimExpr','DimExprs',1,'p_DimExprs','parser',701),
  ('DimExprs -> DimExprs DimExpr','DimExprs',2,'p_DimExprs','parser',702),
  ('DimExpr -> L_SQBR Expression R_SQBR','DimExpr',3,'p_DimExpr','parser',708),
  ('Dims -> L_SQBR R_SQBR','Dims',2,'p_Dims','parser',714),
  ('Dims -> Dims L_SQBR R_SQBR','Dims',3,'p_Dims','parser',715),
  ('FieldAccess -> Primary DOT IDENTIFIER','FieldAccess',3,'p_FieldAccess','parser',721),
  ('FieldAccess -> SUPER DOT IDENTIFIER','FieldAccess',3,'p_FieldAccess','parser',722),
  ('MethodInvocation -> Name L_PAREN ArgumentList R_PAREN','MethodInvocation',4,'p_MethodInvocation','parser',728),
  ('MethodInvocation -> Name L_PAREN R_PAREN','MethodInvocation',3,'p_MethodInvocation','parser',729),
  ('MethodInvocation -> Primary DOT IDENTIFIER L_PAREN ArgumentList R_PAREN','MethodInvocation',6,'p_MethodInvocation','parser',730),
  ('MethodInvocation -> Primary DOT IDENTIFIER L_PAREN R_PAREN','MethodInvocation',5,'p_MethodInvocation','parser',731),
  ('MethodInvocation -> SUPER DOT IDENTIFIER L_PAREN ArgumentList R_PAREN','MethodInvocation',6,'p_MethodInvocation','parser',732),
  ('MethodInvocation -> SUPER DOT IDENTIFIER L_PAREN R_PAREN','MethodInvocation',5,'p_MethodInvocation','parser',733),
  ('ArrayAccess -> Name L_SQBR Expression R_SQBR','ArrayAccess',4,'p_ArrayAccess','parser',739),
  ('ArrayAccess -> PrimaryNoNewArray L_SQBR Expression R_SQBR','ArrayAccess',4,'p_ArrayAccess','parser',740),
  ('PostfixExpression -> Primary','PostfixExpression',1,'p_PostfixExpression','parser',746),
  ('PostfixExpression -> Name','PostfixExpression',1,'p_PostfixExpression','parser',747),
  ('PostfixExpression -> PostIncrementExpression','PostfixExpression',1,'p_PostfixExpression','parser',748),
  ('PostfixExpression -> PostDecrementExpression','PostfixExpression',1,'p_PostfixExpression','parser',749),
  ('PostIncrementExpression -> PostfixExpression INCREMENT','PostIncrementExpression',2,'p_PostIncrementExpression','parser',755),
  ('PostDecrementExpression -> PostfixExpression DECREMENT','PostDecrementExpression',2,'p_PostDecrementExpression','parser',761),
  ('UnaryExpression -> PreIncrementExpression','UnaryExpression',1,'p_UnaryExpression','parser',767),
  ('UnaryExpression -> PreDecrementExpression','UnaryExpression',1,'p_UnaryExpression','parser',768),
  ('UnaryExpression -> PLUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser',769),
  ('UnaryExpression -> MINUS UnaryExpression','UnaryExpression',2,'p_UnaryExpression','parser',770),
  ('UnaryExpression -> UnaryExpressionNotPlusMinus','UnaryExpression',1,'p_UnaryExpression','parser',771),
  ('PreIncrementExpression -> INCREMENT UnaryExpression','PreIncrementExpression',2,'p_PreIncrementExpression','parser',777),
  ('PreDecrementExpression -> DECREMENT UnaryExpression','PreDecrementExpression',2,'p_PreDecrementExpression','parser',783),
  ('UnaryExpressionNotPlusMinus -> PostfixExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser',789),
  ('UnaryExpressionNotPlusMinus -> BITWISE_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser',790),
  ('UnaryExpressionNotPlusMinus -> LOGICAL_NOT UnaryExpression','UnaryExpressionNotPlusMinus',2,'p_UnaryExpressionNotPlusMinus','parser',791),
  ('UnaryExpressionNotPlusMinus -> CastExpression','UnaryExpressionNotPlusMinus',1,'p_UnaryExpressionNotPlusMinus','parser',792),
  ('CastExpression -> L_PAREN PrimitiveType Dims R_PAREN UnaryExpression','CastExpression',5,'p_CastExpression','parser',798),
  ('CastExpression -> L_PAREN PrimitiveType R_PAREN UnaryExpression','CastExpression',4,'p_CastExpression','parser',799),
  ('CastExpression -> L_PAREN Expression R_PAREN UnaryExpressionNotPlusMinus','CastExpression',4,'p_CastExpression','parser',800),
  ('CastExpression -> L_PAREN Name Dims R_PAREN UnaryExpressionNotPlusMinus','CastExpression',5,'p_CastExpression','parser',801),
  ('MultiplicativeExpression -> UnaryExpression','MultiplicativeExpression',1,'p_MultiplicativeExpression','parser',807),
  ('MultiplicativeExpression -> MultiplicativeExpression MULT UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser',808),
  ('MultiplicativeExpression -> MultiplicativeExpression DIVIDE UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser',809),
  ('MultiplicativeExpression -> MultiplicativeExpression MODULO UnaryExpression','MultiplicativeExpression',3,'p_MultiplicativeExpression','parser',810),
  ('AdditiveExpression -> MultiplicativeExpression','AdditiveExpression',1,'p_AdditiveExpression','parser',816),
  ('AdditiveExpression -> AdditiveExpression PLUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser',817),
  ('AdditiveExpression -> AdditiveExpression MINUS MultiplicativeExpression','AdditiveExpression',3,'p_AdditiveExpression','parser',818),
  ('ShiftExpression -> AdditiveExpression','ShiftExpression',1,'p_ShiftExpression','parser',824),
  ('ShiftExpression -> ShiftExpression L_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser',825),
  ('ShiftExpression -> ShiftExpression R_SHIFT AdditiveExpression','ShiftExpression',3,'p_ShiftExpression','parser',826),
  ('RelationalExpression -> ShiftExpression','RelationalExpression',1,'p_RelationalExpression','parser',832),
  ('RelationalExpression -> RelationalExpression LST ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser',833),
  ('RelationalExpression -> RelationalExpression GRT ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser',834),
  ('RelationalExpression -> RelationalExpression LEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser',835),
  ('RelationalExpression -> RelationalExpression GEQ ShiftExpression','RelationalExpression',3,'p_RelationalExpression','parser',836),
  ('RelationalExpression -> RelationalExpression INSTANCEOF ReferenceType','RelationalExpression',3,'p_RelationalExpression','parser',837),
  ('EqualityExpression -> RelationalExpression','EqualityExpression',1,'p_EqualityExpression','parser',843),
  ('EqualityExpression -> EqualityExpression EQUALS RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser',844),
  ('EqualityExpression -> EqualityExpression NOT_EQUAL RelationalExpression','EqualityExpression',3,'p_EqualityExpression','parser',845),
  ('AndExpression -> EqualityExpression','AndExpression',1,'p_AndExpression','parser',851),
  ('AndExpression -> AndExpression BITWISE_AND EqualityExpression','AndExpression',3,'p_AndExpression','parser',852),
  ('ExclusiveOrExpression -> AndExpression','ExclusiveOrExpression',1,'p_ExclusiveOrExpression','parser',858),
  ('ExclusiveOrExpression -> ExclusiveOrExpression BITWISE_XOR AndExpression','ExclusiveOrExpression',3,'p_ExclusiveOrExpression','parser',859),
  ('InclusiveOrExpression -> ExclusiveOrExpression','InclusiveOrExpression',1,'p_InclusiveOrExpression','parser',865),
  ('InclusiveOrExpression -> InclusiveOrExpression BITWISE_OR ExclusiveOrExpression','InclusiveOrExpression',3,'p_InclusiveOrExpression','parser',866),
  ('ConditionalAndExpression -> InclusiveOrExpression','ConditionalAndExpression',1,'p_ConditionalAndExpression','parser',872),
  ('ConditionalAndExpression -> ConditionalAndExpression LOGICAL_AND InclusiveOrExpression','ConditionalAndExpression',3,'p_ConditionalAndExpression','parser',873),
  ('ConditionalOrExpression -> ConditionalAndExpression','ConditionalOrExpression',1,'p_ConditionalOrExpression','parser',879),
  ('ConditionalOrExpression -> ConditionalOrExpression LOGICAL_OR ConditionalAndExpression','ConditionalOrExpression',3,'p_ConditionalOrExpression','parser',880),
  ('ConditionalExpression -> ConditionalOrExpression','ConditionalExpression',1,'p_ConditionalExpression','parser',886),
  ('ConditionalExpression -> ConditionalOrExpression QUESTION Expression COLON ConditionalExpression','ConditionalExpression',5,'p_ConditionalExpression','parser',887),
  ('AssignmentExpression -> ConditionalExpression','AssignmentExpression',1,'p_AssignmentExpression','parser',893),
  ('AssignmentExpression -> Assignment','AssignmentExpression',1,'p_AssignmentExpression','parser',894),
  ('AssignmentExpression -> LambdaExpression','AssignmentExpression',1,'p_AssignmentExpression','parser',895),
  ('Assignment -> LeftHandSide AssignmentOperator AssignmentExpression','Assignment',3,'p_Assignment','parser',901),
  ('LeftHandSide -> Name','LeftHandSide',1,'p_LeftHandSide','parser',907),
  ('LeftHandSide -> FieldAccess','LeftHandSide',1,'p_LeftHandSide','parser',908),
  ('LeftHandSide -> ArrayAccess','LeftHandSide',1,'p_LeftHandSide','parser',909),
  ('AssignmentOperator -> ASSIGN','AssignmentOperator',1,'p_AssignmentOperator','parser',915),
  ('AssignmentOperator -> MULTEQ','AssignmentOperator',1,'p_AssignmentOperator','parser',916),
  ('AssignmentOperator -> DIVEQ','AssignmentOperator',1,'p_AssignmentOperator','parser',917),
  ('AssignmentOperator -> MODEQ','AssignmentOperator',1,'p_AssignmentOperator','parser',918),
  ('AssignmentOperator -> PLUSEQ','AssignmentOperator',1,'p_AssignmentOperator','parser',919),
  ('AssignmentOperator -> MINUSEQ','AssignmentOperator',1,'p_AssignmentOperator','parser',920),
  ('AssignmentOperator -> LSHIFTEQ','AssignmentOperator',1,'p_AssignmentOperator','parser',921),
  ('AssignmentOperator -> RSHIFTEQ','AssignmentOperator',1,'p_AssignmentOperator','parser',922),
  ('Expression -> AssignmentExpression','Expression',1,'p_Expression','parser',929),
  ('LambdaExpression -> LAMBDA L_PAREN FormalParameterList R_PAREN LAMBDA_TOKEN Block','LambdaExpression',6,'p_LambdaExpression','parser',935),
  ('LambdaExpression -> LAMBDA L_PAREN R_PAREN LAMBDA_TOKEN Block','LambdaExpression',5,'p_LambdaExpression','parser',936),
  ('ConstantExpression -> Expression','ConstantExpression',1,'p_ConstantExpression','parser',942),
]
